View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
encoding = "UTF-8")
attributes(datoscvr)$label.table
View(datoscvr)
attributes(datoscvr)$label.table
attributes(datoscvr)$label.table
attributes(datoscvr)$variable.labelseer
attributes(datoscvr)$variable.label
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
attributes(datoscvr)$value.labels
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
encoding = "UTF-8")
attributes(datoscvr)$value.labels
attributes(datoscvr)$variable.labels
attributes(datoscvr)$label.table
View(datoscvr)
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
str(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
encoding = "UTF-8")
str(datoscvr)
View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
useBytes = TRUE,
encoding = "UTF-8")
View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
encoding = "UTF-8")
str(datoscvr)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
str(datoscvr)
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
datoscvr %>% filter(LDS_LDT & LSE & LRC & MAT)
View(datoscvr)
datoscvr %>% filter(LDS_LDT & LSE & LRC & MAT), view
cvrfiltro <- datoscvr %>% filter(LDS_LDT & LSE & LRC & MAT)
View(cvrfiltro)
cvrfiltro <- filter(datoscvr, LDS_LDT & LSE & LRC & MAT)
View(cvrfiltro)
str(datoscvr)
table(datoscvr)
View(datoscvr)
cvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
View(cvr)
table(datoscvr$IDTIPOAC)
distinct(cvr$IDACTO)
View(cvr)
distinct(cvr)
View(cvr)
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
encoding = "UTF-8")
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
useBytes = TRUE,
encoding = "UTF-8")
str(datoscvr)
table(datoscvr)
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
encoding = "UTF-8")
View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
View(datoscvr)
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
View(datoscvr)
str(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
useBytes = TRUE,
encoding = "UTF-8")
View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
useBytes = TRUE,
reencode = "UTF-8")
View(datoscvr)
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
frq(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8",
encoding = "UTF-8")
View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
View(datoscvr)
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = T,
to.data.frame = TRUE,
reencode = "UTF-8")
View(datoscvr)
cat("\014")
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
View(datoscvr)
attributes(datoscvr)$value.labels
table(datoscvr$IDTIPOAC)
sapply(datoscvr)
sapply(datoscvr, class)
cvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
View(cvr)
distinct(cvr$IDACTO)
distinct(cvr$IDACTO)
cvr[!duplicate(cvr$IDACTO)]
distinct(cvr$IDACTO)
distinct(IDACTO)
a <- distinct(datoscvr$IDACTO)
name(cvr)
names(cvr)
install.packages("car")
a <- distinct(datoscvr$IDACTO)
sapply(datoscvr, class)
as.character(IDACTO)
as.character(datoscvr$IDACTO)
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
#
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
cvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
# Eliminamos duplicados de la variable "IDACTO"
as.character(cvr$IDACTO)
cvr <- distinct(cvr$IDACTO)
sapply(datoscvr, class)
unique(cvr$IDACTO)
View(cvr)
View(cvr)
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
# Eliminamos duplicados de la variable "IDACTO"
cvr <- unique(cvr$IDACTO)
# Eliminamos duplicados de la variable "IDACTO"
cvr <- unique(datoscvr$IDACTO)
# Eliminamos duplicados de la variable "IDACTO"
cvr.unique <- unique(datoscvr$IDACTO)
unique(datoscvr$IDACTO)
replace(datoscvr&IDACTO, unique(datoscvr$IDACTO))
View(datoscvr)
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
View(datoscvr)
unique(datoscvr)
A <-unique(datoscvr)
View(A)
A <-unique(datoscvr$IDACTO)
A <-dataframe.unique(datoscvr$IDACTO)
A <-dataframe(unique(datoscvr$IDACTO))
writeLines("/n")
# Eliminamos duplicados de la variable "IDACTO"
writeLines("/n")
datoscvr <- unique(datoscvr)
View(datoscvr)
writeLines("/n")
datoscvr <- unique(datoscvr$IDACTO)
datoscvr <- data.frame(unique(datoscvr$IDACTO))
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
datoscvr <- unique(datoscvr$IDACTO)
datoscvr
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
# Eliminamos duplicados de la variable "IDACTO"
# Eliminamos duplicados de la variable "IDACTO"
distinct(datoscvr$IDACTO, .keep_all = TRUE)
View(datoscvr)
distinct(datoscvr$IDACTO, .keep_all = TRUE)
A <- datoscvr[!duplicated(datoscvr$IDACTO)]
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
A <- datoscvr[!duplicated(datoscvr$IDACTO)]
A <- datoscvr[!duplicated(datoscvr$IDACTO), ]
View(A)
datoscvr <- datoscvr[!duplicated(datoscvr$IDACTO), ]
View(A)
View(datoscvr)
rename(datoscvr, Departamento = DEPNA0,
Distrito = UBIDIST)
View(datoscvr)
rename(datoscvr, Departamento = DEPNA0,
Distrito = UBIDIST)
A <-rename(datoscvr, Departamento = DEPNA0,
Distrito = UBIDIST)
View(A)
datoscvr <-rename(datoscvr, Departamento = DEPNA0,
Distrito = UBIDIST)
A <- datoscvr %>% group_by(Departamento) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
View(A)
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
# Eliminamos duplicados de la variable "IDACTO"
datoscvr <- datoscvr[!duplicated(datoscvr$IDACTO), ]
# Creamos las bases de datos solicitadas:
# Renombramos variables
datoscvr <-rename(datoscvr, DEPARTAMENTO = DEPNA0,
DISTRITO = UBIDIST)
# Base de datos que se agrupa por departamento y obtenemos el total de eventos
# de violencia
EventosxDpto <- datoscvr %>% group_by(DEPARTAMENTO) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
EventosxDistr <- datoscvr %>% group_by(DISTRITO) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
# Base de datos que se agrupa por departamento y periodo, y luego obtenemos el total de eventos
# obtenemos el total de eventos de violencia
EventosDyP <- datoscvr %>% group_by(DEPARTAMENTO, PERIODO) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
View(EventosDyP)
View(EventosxDpto)
View(EventosxDistr)
table(datoscvr$DEPARTAMENTO)
attributes(datoscvr$DEPARTAMENTO)
attributes(datoscvr$DEPARTAMENTO)value.labels
attributes(datoscvr$DEPARTAMENTO)$value.labels
View(EventosDyP)
# Limpiamos la consola
cat("\014")
# Library y otras opciones
library(pacman)
p_load(dplyr, readxl, rstudioapi, tidyverse, foreign, datos)
options(scipen = 999)
# Determinamos directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Ejercicio sobre Datos de la CVR-----------------------
# Importamos la base de datos (haciendo los ajustes necesarios).
# Con etiquetas como datos
datoscvr <- read.spss("../../data/actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
str(datoscvr)
sapply(datoscvr, class)
# Mostramos las etiquetas de valores y variables:
attributes(datoscvr)$variable.labels
attributes(datoscvr)$value.labels
# Filtramos la base de datos por eventos
# (desaparición, secuestros, reclutamiento forzado y muertes
# en atentados):
table(datoscvr$IDTIPOAC)
datoscvr <- filter(datoscvr, IDTIPOAC ==
c("LDS", "LSE", "LRC", "MAT"))
# Eliminamos duplicados de la variable "IDACTO"
datoscvr <- datoscvr[!duplicated(datoscvr$IDACTO), ]
# Creamos las bases de datos solicitadas:
# Renombramos variables
datoscvr <-rename(datoscvr, DEPARTAMENTO = DEPNA0,
DISTRITO = UBIDIST)
# Agregamos etiquetas necesarias
datoscvr$DEPARTAMENTO <- factor(datoscvr$DEPARTAMENTO,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 90),
labels = c("Ayacucho", "Apurímac", "Huancavelica",
"Cusco", "Huánuco", "Ucayali",
"San Martín", "Puno", "Junín",
"Lima-Callao", "Otros"))
datoscvr$PERIODO <- factor(datoscvr$PERIODO,
levels = c(1, 2, 3, 4, 5),
labels = c("1980-1982", "1983-1985",
"1986-1988", "1989-1992",
"1993-2000"))
# Base de datos que se agrupa por departamento y obtenemos el total de eventos
# de violencia
EventosxDpto <- datoscvr %>% group_by(DEPARTAMENTO) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
# Base de datos que se agrupa por distrito y obtenemos el total de eventos
# de violencia
EventosxDistr <- datoscvr %>% group_by(DISTRITO) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
# Base de datos que se agrupa por departamento y periodo, y luego obtenemos el total de eventos
# obtenemos el total de eventos de violencia
EventosDyP <- datoscvr %>% group_by(DEPARTAMENTO, PERIODO) %>%
summarise(Total_Desaparición = sum(LDS_LDT),
Total_Secuestros = sum(LSE),
Total_RecluForza = sum(LRC),
Total_MuAtentados = sum(MAT))
View(EventosDyP)
View(EventosxDistr)
View(EventosxDpto)

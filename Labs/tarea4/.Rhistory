attr(enaho19_sumaria$nbi1, 'labels')
# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#ENAHO
###Guardamoslos módulos de la enaho que utilizaremos----
enaho100_19 <- read_dta("../../data/enaho/enaho01-2019-100.dta")
enaho200_19 <- read_dta("../../data/enaho/enaho01-2019-200.dta")
enaho300_19 <- read_dta("../../data/enaho/enaho01a-2019-300.dta")
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
base_deflactores <- read_dta("../../data/enaho/deflactores_base2020_new.dta")
### Merge ENAHO 200 y 300 del 2019 ------------------------------
enaho19 <- enaho200_19 %>%
left_join(enaho300_19, by = c("conglome","vivienda","hogar","codperso"))
### Filtramos la base de datos según residentes permanentes en el hogar
enaho19 <- enaho19 %>% filter((p204==1 & p205==2) | (p204==2 & p206==1))
###Años de educación de cada miembro del hogar ------------------------
### Vemos las label de la variable del último nivel educativo alcanzado
attr(enaho19$p301a, 'labels')
### Creamos la variable educ1 dentro de la database enaho19
# Cuando p301a se encuentre entre 1-4,  se le asigna a la variable educ1 el valor de 0.
# Se repite para las otras variables.
enaho19<- enaho19 %>% mutate(
educ1=case_when(
between (p301a,1,4)~0,
between (p301a,5,6)~6,
between (p301a,7,10)~11,
p301a == 11 ~16
))
enaho19$educ2 <- apply(enaho19[,c("p301b","p301c")], 1, sum, na.rm=T)
#Creamos la variable años de educación al sumar educ1 y educ2, sin usar los NA en el cálculo.
enaho19$years_educ <- apply(enaho19[,c("educ1","educ2")], 1, sum, na.rm=T)
#Variab
enaho19_sumaria <- enaho100_19 %>%
left_join(sumaria_19, by = c("conglome","vivienda","hogar"))
#Dummy necesidad basica insatisfecha
enaho19_sumaria$suma_nbi <- apply(enaho19_sumaria[,c("nbi1","nbi2", "nbi3", "nbi4", "nbi5")], 1, sum, na.rm=T)
attr(enaho19_sumaria$nbi1, 'labels')
attr(enaho19_sumaria$nbi2, 'labels')
attr(enaho19_sumaria$nbi3, 'labels')
attr(enaho19_sumaria$nbi4, 'labels')
attr(enaho19_sumaria$nbi5, 'labels')
enaho19_sumaria$dummy_nbi <- ifelse(enaho19_sumaria$suma_nbi > 0, 1, 0)
library(pacman)
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled, ggthemes)
browseURL("http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf")
ggplot(dummy_nbi, aes(x = dpto, y = porc)) +
geom_bar(color = "blue", fill = "white")+
theme_test() +
labs(title = "Gráfico de Barras de Necesidades Básicas Insatisfechas (nbi)",
x = "Departamento",
y = "NBI (%)")
enaho19_sumaria$dummy_nbi <- ifelse(enaho19_sumaria$suma_nbi > 0, 1, 0)
ggplot(dummy_nbi, aes(x = dpto, y = porc)) +
geom_bar(color = "blue", fill = "white")+
theme_test() +
labs(title = "Gráfico de Barras de Necesidades Básicas Insatisfechas (nbi)",
x = "Departamento",
y = "NBI (%)")
ggplot(enaho19_sumaria$dummy_nbi, aes(x = dpto, y = porc)) +
geom_bar(color = "blue", fill = "white")+
theme_test() +
labs(title = "Gráfico de Barras de Necesidades Básicas Insatisfechas (nbi)",
x = "Departamento",
y = "NBI (%)")
rlang::last_trace()
geom_bar(position = position_fill()) +
theme_bw() +
labs(title = "Gráfico de Barras de Necesidades Básicas Insatisfechas (nbi)",
x = "Departamento",
y = "NBI (%)")
ggplot(enaho19_sumaria$dummy_nbi, aes(x = dpto, y = porc)) +
geom_bar(position = position_fill()) +
theme_bw() +
labs(title = "Gráfico de Barras de Necesidades Básicas Insatisfechas (nbi)",
x = "Departamento",
y = "NBI (%)")
enaho19_sumaria$dummy_nbi <- ifelse(enaho19_sumaria$suma_nbi > 0, 1, 0)
var_label() <- list(dummy_nbi = "Dummy de necesidades basicas insatisfechas (nbi)")
enaho19_sumaria$dummy_nbi <- ifelse(enaho19_sumaria$suma_nbi > 0, 1, 0)
var_label(enaho19_sumaria) <- list(dummy_nbi = "Dummy de necesidades basicas insatisfechas (nbi)")
val_labels(enaho19$dummy_nbi) <- c("Hogar con nbi" = 0,
"Hogar sin nbi" = 1)
val_labels(enaho19_sumaria$dummy_nbi) <- c("Hogar con nbi" = 0,
"Hogar sin nbi" = 1)
attr(enaho19_sumaria$dummy_nbi, "labels")
enaho19_sumaria$factorpob <- round(enaho19_sumaria$factor07*enaho19$mieperho, 1)
enaho19_sumaria$factorpob <- round(enaho19_sumaria$factor07*enaho19_sumaria$mieperho, 1)
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
enaho19_sumaria$factorpob <- round(enaho19_sumaria$factor07*enaho19_sumaria$mieperho, 1)
### Creamos la variable departamento
enaho19_sumaria <- enaho19_sumaria %>%
mutate(dpto_code = substr(ubigeo, 1, 2), # posicicón inicial, 2 : posición final
ubigeo3 = str_pad(ubigeo2, 6, pad ="0"),
dpto = case_when(
dpto_code == "01" ~ "Amazonas", dpto_code == "02" ~ "Ancash",
dpto_code == "03" ~ "Apurimac", dpto_code == "04" ~ "Arequipa",
dpto_code == "05" ~ "Ayacucho", dpto_code == "06" ~ "Cajamarca",
dpto_code == "07" ~ "Callao"  , dpto_code == "08" ~ "Cusco",
dpto_code == "09" ~ "Huancavelica",dpto_code == "10" ~ "Huanuco",
dpto_code == "11" ~ "Ica"     , dpto_code == "12" ~ "Junin",
dpto_code == "13" ~ "La Libertad",dpto_code == "14" ~ "Lambayaque",
dpto_code == "15" ~ "Lima"    , dpto_code == "16" ~ "Loreto",
dpto_code == "17" ~ "Madre de Dios",dpto_code == "18" ~ "Moquegua",
dpto_code == "19" ~ "Pasco"   ,dpto_code == "20" ~ "Piura",
dpto_code == "21" ~ "Puno"    ,dpto_code == "22" ~ "San Martin",
dpto_code == "23" ~ "Tacna"   ,dpto_code == "24" ~ "Tumbes",
dpto_code == "25" ~ "Ucayali"
))
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
enaho19_sumaria  %>%  group_by(dpto) %>%
summarise(
nbi_rate = mean(dummy_nbi, na.rm = T)*100
) %>% as.data.frame()
ggplot(data_nbi, aes(x = dpto, fill = nbi_rate ) ) +
geom_bar(position = position_fill()) +
theme_bw() +
labs(title = "Necesidades Básicas Insatisfechas por departamento",
x = "Departamento",
y = "Porcentaje (%)") +
scale_fill_manual(values = c("darkolivegreen3", "firebrick2"))
ggplot(data_nbi, aes(x = dpto, y = nbi_rate, fill = nbi_rate ) ) +
geom_bar(position = position_fill()) +
theme_bw() +
labs(title = "Necesidades Básicas Insatisfechas por departamento",
x = "Departamento",
y = "Porcentaje (%)") +
scale_fill_manual(values = c("darkolivegreen3", "firebrick2"))
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
sum(is.na(enaho19_sumaria$factorpob))
enaho19_sumaria <- enaho19_sumaria %>%
mutate(dpto_code = substr(ubigeo, 1, 2), # posicicón inicial, 2 : posición final
ubigeo3 = str_pad(ubigeo2, 6, pad ="0"),
dpto = case_when(
dpto_code == "01" ~ "Amazonas", dpto_code == "02" ~ "Ancash",
dpto_code == "03" ~ "Apurimac", dpto_code == "04" ~ "Arequipa",
dpto_code == "05" ~ "Ayacucho", dpto_code == "06" ~ "Cajamarca",
dpto_code == "07" ~ "Callao"  , dpto_code == "08" ~ "Cusco",
dpto_code == "09" ~ "Huancavelica",dpto_code == "10" ~ "Huanuco",
dpto_code == "11" ~ "Ica"     , dpto_code == "12" ~ "Junin",
dpto_code == "13" ~ "La Libertad",dpto_code == "14" ~ "Lambayaque",
dpto_code == "15" ~ "Lima"    , dpto_code == "16" ~ "Loreto",
dpto_code == "17" ~ "Madre de Dios",dpto_code == "18" ~ "Moquegua",
dpto_code == "19" ~ "Pasco"   ,dpto_code == "20" ~ "Piura",
dpto_code == "21" ~ "Puno"    ,dpto_code == "22" ~ "San Martin",
dpto_code == "23" ~ "Tacna"   ,dpto_code == "24" ~ "Tumbes",
dpto_code == "25" ~ "Ucayali"
))
### Factor de expansión
enaho19_sumaria$factorpob <- round(enaho19_sumaria$factor07*enaho19_sumaria$mieperho, 1)
#Creamos el porcentaje de hogares con nbi ajustado al factor de expansión.
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
#Creamos el porcentaje de hogares con nbi ajustado al factor de expansión.
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled, ggthemes)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
---------------------
enaho100_19 <- read_dta("../../data/enaho/enaho01-2019-100.dta")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
enaho100_19 <- read_dta("../../data/enaho/enaho01-2019-100.dta")
enaho200_19 <- read_dta("../../data/enaho/enaho01-2019-200.dta")
enaho300_19 <- read_dta("../../data/enaho/enaho01a-2019-300.dta")
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
base_deflactores <- read_dta("../../data/enaho/deflactores_base2020_new.dta")
enaho19 <- enaho200_19 %>%
left_join(enaho300_19, by = c("conglome","vivienda","hogar","codperso"))
### Filtramos la base de datos según residentes permanentes en el hogar
enaho19 <- enaho19 %>% filter((p204==1 & p205==2) | (p204==2 & p206==1))
###Años de educación de cada miembro del hogar
### Vemos las label de la variable del último nivel educativo alcanzado
attr(enaho19$p301a, 'labels')
### Creamos la variable educ1 dentro de la database enaho19
# Cuando p301a se encuentre entre 1-4,  se le asigna a la variable educ1 el valor de 0.
# Se repite para las otras variables.
enaho19<- enaho19 %>% mutate(
educ1=case_when(
between (p301a,1,4)~0,
between (p301a,5,6)~6,
between (p301a,7,10)~11,
p301a == 11 ~16
))
enaho19$educ2 <- apply(enaho19[,c("p301b","p301c")], 1, sum, na.rm=T)
#Creamos la variable años de educación al sumar educ1 y educ2, sin usar los NA en el cálculo.
enaho19$years_educ <- apply(enaho19[,c("educ1","educ2")], 1, sum, na.rm=T)
#Variable con la máxima cantidad de años de educación alcanzado
#por algún miembro del hogar
# Merge ENAHO 100 y sumaria del 2019 --------------------------------------------
enaho19_sumaria <- enaho100_19 %>%
left_join(sumaria_19, by = c("conglome","vivienda","hogar"))
#Dummy necesidad basica insatisfecha
### Tener en cuenta que las nbi ya son variables dicotómicas.
### Sumamos las variables
enaho19_sumaria$suma_nbi <- apply(enaho19_sumaria[,c("nbi1","nbi2", "nbi3", "nbi4", "nbi5")], 1, sum, na.rm=T)
### Creamos "dummy_nbi"
enaho19_sumaria$dummy_nbi <- ifelse(enaho19_sumaria$suma_nbi > 0, 1, 0)
var_label(enaho19_sumaria) <- list(dummy_nbi = "Dummy de necesidades basicas insatisfechas (nbi)")
val_labels(enaho19_sumaria$dummy_nbi) <- c("Hogar con nbi" = 0,
"Hogar sin nbi" = 1)
attr(enaho19_sumaria$dummy_nbi, "labels")
#Grafico de barras ------------------------------------------------------------
### Creamos la variable departamento
enaho19_sumaria <- enaho19_sumaria %>%
mutate(dpto_code = substr(ubigeo, 1, 2), # posicicón inicial, 2 : posición final
ubigeo3 = str_pad(ubigeo2, 6, pad ="0"),
dpto = case_when(
dpto_code == "01" ~ "Amazonas", dpto_code == "02" ~ "Ancash",
dpto_code == "03" ~ "Apurimac", dpto_code == "04" ~ "Arequipa",
dpto_code == "05" ~ "Ayacucho", dpto_code == "06" ~ "Cajamarca",
dpto_code == "07" ~ "Callao"  , dpto_code == "08" ~ "Cusco",
dpto_code == "09" ~ "Huancavelica",dpto_code == "10" ~ "Huanuco",
dpto_code == "11" ~ "Ica"     , dpto_code == "12" ~ "Junin",
dpto_code == "13" ~ "La Libertad",dpto_code == "14" ~ "Lambayaque",
dpto_code == "15" ~ "Lima"    , dpto_code == "16" ~ "Loreto",
dpto_code == "17" ~ "Madre de Dios",dpto_code == "18" ~ "Moquegua",
dpto_code == "19" ~ "Pasco"   ,dpto_code == "20" ~ "Piura",
dpto_code == "21" ~ "Puno"    ,dpto_code == "22" ~ "San Martin",
dpto_code == "23" ~ "Tacna"   ,dpto_code == "24" ~ "Tumbes",
dpto_code == "25" ~ "Ucayali"
))
### Factor de expansión
enaho19_sumaria$factorpob <- round(enaho19_sumaria$factor07*enaho19_sumaria$mieperho, 1)
#Creamos el porcentaje de hogares con nbi ajustado al factor de expansión.
data_nbi <- enaho19_sumaria  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
dplyr::group_by(dpto) %>%
summarise(
nbi_rate = survey_mean(dummy_nbi, na.rm = T)*100
)
enaho19 <- enaho19 %>%
group_by(hogar) %>%
mutate(max_educ = max(years_educ, na.rm = TRUE)) %>%
ungroup()
View(base_deflactores)
View(enaho19)
enaho19_maxeduc <- enaho19 %>%
group_by(conglome, vivienda) %>%
summarize(max_years_educ = max(years_educ, na.rm = TRUE)) %>%
ungroup()
enaho19 <- enaho19 %>%
group_by(conglome, vivienda, hogar) %>%
mutate(max_educ = max(years_educ, na.rm = TRUE)) %>%
ungroup()
append_enaho <- bind_rows(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20) %>%
mutate(  dpto = as.numeric( substr(ubigeo,1,2) ),
año = as.numeric(año)
)
# Asignamos el código de Lima region  al
append_enaho$dpto[ append_enaho$dpto == 7 ] <- 15
append_enaho <- left_join(append_enaho,
base_deflactores, by = c("dpto", "año" = "aniorec"))
append_enaho$factorpob <-  round(append_enaho$factor07*append_enaho$mieperho, 1)
append_enaho <- append_enaho %>%
mutate(
area =  factor(case_when(
estrato <= 5 ~ 1,
estrato > 5 ~ 2  ), levels = c(1,2), labels = c("Urbano", "Rural")),
ingmpc = inghog1d/(mieperho*12*i00),
gmpc = (mieperho*12*i00),
factorpob = round(factor07*mieperho, 1)
)
View(append_enaho)
View(append_enaho)
ingmpc_año %>%
ggplot(aes(x = año, y = ingmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Ingreso per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Ingreso per cápita mensual") +
scale_color_manual(values = c("red", "yellow")) # colores personalizados para cada área
append_enaho %>%
ggplot(aes(x = año, y = ingmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Ingreso per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Ingreso per cápita mensual") +
scale_color_manual(values = c("red", "yellow")) # colores personalizados para cada área
ingmpc_years <- append_enaho %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(año, area) %>%
summarise(
ingmpc = survey_mean(ingmpc, na.rm = T)
)
ingmpc_years <- append_enaho %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob,
nest = TRUE) %>%
group_by(año, area) %>%
summarise(
ingmpc = survey_mean(ingmpc, na.rm = T)
)
ingmpc_years %>%
ggplot(aes(x = año, y = ingmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Ingreso per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Ingreso per cápita mensual") +
scale_color_manual(values = c("red", "blue")) # colores personalizados para cada área
ingmpc_years %>%
ggplot(aes(x = año, y = ingmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Ingreso per cápita mensual según área urbana o rural",
x = "Año",
y = "Ingreso per cápita mensual") +
scale_color_manual(values = c("red", "blue"))
gmpc_years %>%
ggplot(aes(x = año, y = ingmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Gasto per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Gasto per cápita mensual") +
scale_color_manual(values = c("#FFC0CB", "#B2FFFF"))
gmpc_years <- append_enaho %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob,
nest = TRUE) %>%
group_by(año, area) %>%
summarise(
gmpc = survey_mean(gmpc, na.rm = T)
)
#### Gráfico evolución del gasto percápita mensual del hogar
gmpc_years %>%
ggplot(aes(x = año, y = ingmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Gasto per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Gasto per cápita mensual") +
scale_color_manual(values = c("#FFC0CB", "#B2FFFF"))
gmpc_years <- append_enaho %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob,
nest = TRUE) %>%
group_by(año, area) %>%
summarise(
gmpc = survey_mean(gmpc, na.rm = T)
)
#### Gráfico evolución del gasto percápita mensual del hogar
gmpc_years %>%
ggplot(aes(x = año, y = gmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Gasto per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Gasto per cápita mensual") +
scale_color_manual(values = c("#FFC0CB", "#B2FFFF"))
gmpc_years %>%
ggplot(aes(x = año, y = gmpc, group = area, colour = area)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019, 2020)) +
labs(title = "Gasto per cápita mensualsegún área urbana o rural",
x = "Año",
y = "Gasto per cápita mensual") +
scale_color_manual(values = c("#AA336A", "#448EE4"))

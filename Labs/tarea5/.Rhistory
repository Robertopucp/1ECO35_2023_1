# Mostrar el gráfico
print(grafico_lineas_peru)
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Quantity", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
legend.position = "bottom",  # La leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0),  # Alinear el texto de la fuente a la izquierda
panel.grid.major.y = element_line(color = "gray", linetype = "dashed")  # Líneas horizontales en el eje y
)
print(grafico_lineas_peru)
rm(list = ls())
graphics.off()
cat("\014")
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, ggthemes, datos)
#Segundo, cargamos la base de datos:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#PLOT
#Abrimos la base de datos:
prod <- read_excel("../../data/produccion_coca/6.1.1_-_Illicit_coca_bush_cultivation.xlsx", range = "6_1_1!A3:M7", col_names = TRUE)
prod <- prod[-1, ]
nuevos_nombres <- c('País', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020')
colnames(prod) <- nuevos_nombres
prod <- prod %>%
mutate(País = ifelse(País == "Colombia a", "Colombia", País)) %>%
mutate(País = ifelse(País == "Peru b", "Peru", País))
prod_transformado <- prod %>%
pivot_longer(cols = -País, names_to = "años", values_to = "valor")
#Ya arreglamos la base de datos
#Ahora graficamos
summary(prod)
attributes(prod)$label.table
prod_transformado <- prod_transformado[order(prod_transformado$País, prod_transformado$años), ]
# Convertir la columna "años" a tipo numérico
prod_transformado$años <- as.numeric(prod_transformado$años)
# Crear el gráfico de líneas
grafico_lineas <- ggplot(prod_transformado, aes(x = años, y = valor, color = País, shape = País)) +
geom_line() +
geom_point(size = 1.5, show.legend = FALSE) +
labs(x = "year", y = "Coca Production", title = "Figure 1: Global illicit cultivation of coca bush, 2009-2020 (hectares)", caption = "Source: Plurinational State of Bolivia, Colombia, Peru - UNODC") +
theme_minimal() +
theme(legend.position = "bottom",
plot.caption = element_text(hjust = 0, margin = margin(t = 10)),
plot.title = element_text(size = 12, hjust = 0.5, margin = margin(b = 20))) +
scale_color_manual(values = c("#104E8B", "#66CD00", "#B22222")) +
guides(shape = guide_legend(override.aes = list(color = NULL)))
# Eliminar la etiqueta "País" de la leyenda
grafico_lineas <- grafico_lineas +
labs(color = NULL)
# Mostrar el gráfico
print(grafico_lineas)
#Guardar
ggsave("../../output/plots/G9_Productionr.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
#-------------------------------------------------------------------------------------
#ERRADICACIÓN DE COCA
err <- read_excel("../../data/produccion_coca/6.1.2_-_Eradication_of_coca_bush.xlsx", range = "6.1.2!C2:Q5", col_names = TRUE)
err <- err[, -c(2:3)]
nuevos_nombres <- c('País', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020')
colnames(err) <- nuevos_nombres
err_transformado <- err %>%
pivot_longer(cols = -País, names_to = "años", values_to = "valor")
err_transformado <- err_transformado[order(err_transformado$País, err_transformado$años), ]
# Convertir la columna "años" a tipo numérico
err_transformado$años <- as.numeric(err_transformado$años)
# Crear el gráfico de líneas
grafico_lineas <- ggplot(err_transformado, aes(x = años, y = valor, color = País, shape = País)) +
geom_line() +
geom_point(size = 1.5, show.legend = FALSE) +
labs(x = "year", y = "Coca Erradication", title = "Figure 2: Reported eradication of coca bush, 2009-2020", caption = "Source: United Nations Office on Drugs and Crime.") +
theme_minimal() +
theme(legend.position = "bottom",
plot.caption = element_text(hjust = 0, margin = margin(t = 10)),
plot.title = element_text(size = 12, hjust = 0.5, margin = margin(b = 20))) +
scale_color_manual(values = c("#104E8B", "#66CD00", "#B22222")) +
guides(shape = guide_legend(override.aes = list(color = NULL)))
# Eliminar la etiqueta "País" de la leyenda
grafico_lineas <- grafico_lineas +
labs(color = NULL)
# Mostrar el gráfico
print(grafico_lineas)
#Guardar
ggsave("../../output/plots/G9_Erradicationr.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
#------------------------------------------------------------------------------------
#Realizar un gráfico con la producción y erradicación de hoja de coca en el Perú.
# Combinar las bases de datos por la columna "años"
combined_data <- merge(prod_transformado, err_transformado, by = c("años", "País"), all = TRUE)
#Nos quedamos solo con Perú
peru_data <- combined_data %>%
filter(País == "Peru")
peru_data <- combined_data %>%
filter(País == "Peru") %>%
rename(production = valor.x, erradication = valor.y)
# Mostrar el resultado
print(peru_data)
#Graficamos
source_text <- "Source: United Nations Office on Drugs and Crime and Plurinational State of Bolivia, Colombia, Peru - UNODC"
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Quantity", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
#guardar
ggsave("../../output/plots/G9_Perur.png"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
source_text <- "Source: United Nations Office on Drugs and Crime and Plurinational State of Bolivia, Colombia, Peru - UNODC"
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Quantity", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
axis.text.y = element_text(angle = 90, hjust = 1),
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
source_text <- "Source: United Nations Office on Drugs and Crime and Plurinational State of Bolivia, Colombia, Peru - UNODC"
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Quantity", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
axis.text.y = element_text(angle = 90, hjust = 3),
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
source_text <- "Source: United Nations Office on Drugs and Crime and Plurinational State of Bolivia, Colombia, Peru - UNODC"
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Quantity", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
axis.text.y = element_text(angle = 90, hjust = 1),
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Hectares", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
axis.text.y = element_text(angle = 90, hjust = 1),
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
#guardar
ggsave("../../output/plots/G9_Perur.png"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
source_text <- "Source: United Nations Office on Drugs and Crime and Plurinational State of Bolivia, Colombia, Peru - UNODC"
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Hectares", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
axis.text.y = element_text(angle = 90, hjust = 1),
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
#guardar
ggsave("../../output/plots/G9_Perur.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
grafico_lineas <- ggplot(err_transformado, aes(x = años, y = valor, color = País, shape = País)) +
geom_line() +
geom_point(size = 1.5, show.legend = FALSE) +
labs(x = "year", y = "Coca Erradication", title = "Figure 2: Reported eradication of coca bush, 2009-2020", caption = "Source: United Nations Office on Drugs and Crime.") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 90, hjust = 1),
plot.caption = element_text(hjust = 0, margin = margin(t = 10)),
plot.title = element_text(size = 12, hjust = 0.5, margin = margin(b = 20))) +
scale_color_manual(values = c("#104E8B", "#66CD00", "#B22222")) +
guides(shape = guide_legend(override.aes = list(color = NULL)))
# Eliminar la etiqueta "País" de la leyenda
grafico_lineas <- grafico_lineas +
labs(color = NULL)
# Mostrar el gráfico
print(grafico_lineas)
#Guardar
ggsave("../../output/plots/G9_Erradicationr.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
grafico_lineas <- ggplot(prod_transformado, aes(x = años, y = valor, color = País, shape = País)) +
geom_line() +
geom_point(size = 1.5, show.legend = FALSE) +
labs(x = "year", y = "Coca Production", title = "Figure 1: Global illicit cultivation of coca bush, 2009-2020 (hectares)", caption = "Source: Plurinational State of Bolivia, Colombia, Peru - UNODC") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 90, hjust = 1),
plot.caption = element_text(hjust = 0, margin = margin(t = 10)),
plot.title = element_text(size = 12, hjust = 0.5, margin = margin(b = 20))) +
scale_color_manual(values = c("#104E8B", "#66CD00", "#B22222")) +
guides(shape = guide_legend(override.aes = list(color = NULL)))
# Eliminar la etiqueta "País" de la leyenda
grafico_lineas <- grafico_lineas +
labs(color = NULL)
# Mostrar el gráfico
print(grafico_lineas)
#Guardar
ggsave("../../output/plots/G9_Productionr.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
source_text <- "Source: United Nations Office on Drugs and Crime and Plurinational State of Bolivia, Colombia, Peru - UNODC"
grafico_lineas_peru <- ggplot(peru_data, aes(x = años)) +
geom_segment(x = -Inf, y = -Inf, xend = -Inf, yend = Inf, color = "black") +  # Segmento izquierdo
geom_segment(x = -Inf, y = -Inf, xend = Inf, yend = -Inf, color = "black") +  # Segmento inferior
geom_line(aes(y = production, color = "Production")) +
geom_line(aes(y = erradication, color = "Erradication")) +
geom_point(aes(y = production, color = "Production"), shape = 16, size = 3) +
geom_point(aes(y = erradication, color = "Erradication"), shape = 17, size = 3) +
labs(x = "Year", y = "Hectares", title = "Coca Production and Eradication in Peru",
caption = str_wrap(source_text, width = 90)) +
scale_color_manual(values = c("#104E8B", "#B22222"), labels = c("Production", "Erradication")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title.x = element_blank(),  # Eliminar etiqueta del eje x
axis.text.y = element_text(angle = 90, hjust = 1),
legend.position = "bottom",  #la leyenda en la parte de abajo
legend.box = "horizontal",
legend.title = element_blank(),  # Eliminar el título de la leyenda
legend.spacing.x = unit(0.2, "cm"),  # Espacio entre los elementos de la leyenda
plot.caption = element_text(hjust = 0)  # Alinear el texto de la fuente a la izquierda
)
# Mostrar el gráfico
print(grafico_lineas_peru)
ggsave("../../output/plots/G9_Perur.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
grafico_lineas <- ggplot(err_transformado, aes(x = años, y = valor, color = País, shape = País)) +
geom_segment(x = -Inf, y = -Inf, xend = -Inf, yend = Inf, color = "black") +  # Segmento izquierdo
geom_segment(x = -Inf, y = -Inf, xend = Inf, yend = -Inf, color = "black") +  # Segmento inferior
geom_line() +
geom_point(size = 1.5, show.legend = FALSE) +
labs(x = "year", y = "Coca Erradication", title = "Figure 2: Reported eradication of coca bush, 2009-2020", caption = "Source: United Nations Office on Drugs and Crime.") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 90, hjust = 1),
plot.caption = element_text(hjust = 0, margin = margin(t = 10)),
plot.title = element_text(size = 12, hjust = 0.5, margin = margin(b = 20))) +
scale_color_manual(values = c("#104E8B", "#66CD00", "#B22222")) +
guides(shape = guide_legend(override.aes = list(color = NULL)))
# Eliminar la etiqueta "País" de la leyenda
grafico_lineas <- grafico_lineas +
labs(color = NULL)
# Mostrar el gráfico
print(grafico_lineas)
ggsave("../../output/plots/G9_Erradicationr.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
grafico_lineas <- ggplot(prod_transformado, aes(x = años, y = valor, color = País, shape = País)) +
geom_segment(x = -Inf, y = -Inf, xend = -Inf, yend = Inf, color = "black") +  # Segmento izquierdo
geom_segment(x = -Inf, y = -Inf, xend = Inf, yend = -Inf, color = "black") +  # Segmento inferior
geom_line() +
geom_point(size = 1.5, show.legend = FALSE) +
labs(x = "year", y = "Coca Production", title = "Figure 1: Global illicit cultivation of coca bush, 2009-2020 (hectares)", caption = "Source: Plurinational State of Bolivia, Colombia, Peru - UNODC") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 90, hjust = 1),
plot.caption = element_text(hjust = 0, margin = margin(t = 10)),
plot.title = element_text(size = 12, hjust = 0.5, margin = margin(b = 20))) +
scale_color_manual(values = c("#104E8B", "#66CD00", "#B22222")) +
guides(shape = guide_legend(override.aes = list(color = NULL)))
# Eliminar la etiqueta "País" de la leyenda
grafico_lineas <- grafico_lineas +
labs(color = NULL)
# Mostrar el gráfico
print(grafico_lineas)
#Guardar
ggsave("../../output/plots/G9_Productionr.png",
bg = "white"
, height = 7  # alto
, width = 9  # ancho
, dpi = 320   # resolución (calidad de la imagen)
)
metropolitano <- read_excel("../../data/metropolitano.xlsx")
View(metropolitano)
print(metropolitano)
# 1.La base de datos metropolitano.xlsx posse información de latitud y longitud de las estaciones del metropiltano y dos lineas de alimentadores. Usar regex para cambiar el formato de las coordenadas a uno de coordenadas geográficos (i.e -11.25, -69.56).
library(readxl)
metropolitano <- read_excel("./../data/metropolitano.xlsx")
metropolitano <- read_excel("../../data/metropolitano.xlsx")
View(metropolitano)
# 2.En la carpeta estudiantes, ustedes encontrarán una base de datos llamada base_estudiantes.xlsx (Una base de datos muy sucia). La base de datos contiene información de estudiantes de la educación básica regular. Las variables son las siguientes: nombre, edad, fecha de nacimiento, tipo de administración de la institución educativa, género, correro electrónico, dni del apoderado, madre o padre, y una variable con observaciones.
library(readxl)
base_students <- read_excel("GitHub/1ECO35_2023_1/data/estudiantes/base_students.xlsx")
library(readxl)
base_students <- read_excel("../../data/estudiantes/base_students.xlsx")
View(base_students)
# a)Limpiar el nombre de los estudiantes; es decir, retirar caracteres especiales, número , etc que no permite identificar los nombres adecuadamente.
#Primero, planteamos la función para poder limpiar los nombres:
limpiar_nombre <- function(nombre) {
nombre_limpio <- gsub("[^[:alpha:]\\s]", "", nombre)
return(nombre_limpio)
}
#Luego, limpiarmos la base de datos y mostramos los resultados en la base de datos:
base_students$NAME <- limpiar_nombre(base_students$NAME)
print(base_students)
# b)Limpiar la fecha de nacimiento y edad. Asimismo, asignar el formato date a la fecha de nacimiento. Crear una variable con el año de nacimiento.
#Primero, limpiamos la fecha de nacimiento, de la misma forma que el item previo, pero asignándole el formato date y luego lo mostramos en la base de datos.
library(lubridate)
base_students$BORN_DATE <- str_replace_all(base_students$BORN_DATE, "[^0-9-]", "")
print(base_students)
#c) Use la variable GENDER para crear una dummy que tome el valor de 1 para female y 0 para male.
# Limpiar la variable GENDER y mostrar
base_students$GENDER <- tolower(base_students$GENDER)
base_students$GENDER <- gsub("(.)\\1+", "\\1", base_students$GENDER)
print(base_students)
#Creamos la variable dummy:
base_students$GENDER_DUMMY <- ifelse(base_students$GENDER == "female", 1, 0)
print(base_students)
#d)Creamos la variable MAIL que contiene los usuarios de los correos electrónicos de los estudiantes, a partir de la variable MAIL
base_students$EMAIL <- str_extract(base_students$MAIL, "\\b\\w+")
print(base_students)
# e)Crear una variable asociada al DNI de los padres o apoderado.
#Primero, limpiamos la variable DNI_NUMBER:
if ("DNI_NUMBER" %in% names(base_students)) {
# Limpiar la variable DNI_NUMBER para que solo contenga números y símbolos
base_students$DNI_NUMBER <- gsub("[^[:digit:][:punct:]]", "", base_students$DNI_NUMBER)
} else {
print("La variable DNI_NUMBER no se encuentra en la base de datos.")
}
print(base_students)
#Luego, creamos la variable DNI que contiene únicamente números:
base_students$DNI <- gsub("[^[:digit:]]", "", base_students$DNI_NUMBER)
print(base_students)
library(readxl)
base_students <- read_excel("../../data/estudiantes/base_students.xlsx")
View(base_students)
# a)Limpiar el nombre de los estudiantes; es decir, retirar caracteres especiales, número , etc que no permite identificar los nombres adecuadamente.
#Primero, planteamos la función para poder limpiar los nombres:
limpiar_nombre <- function(nombre) {
nombre_limpio <- gsub("[^[:alpha:]\\s]", "", nombre)
return(nombre_limpio)
}
#Luego, limpiarmos la base de datos y mostramos los resultados en la base de datos:
base_students$NAME <- limpiar_nombre(base_students$NAME)
print(base_students)
# b)Limpiar la fecha de nacimiento y edad. Asimismo, asignar el formato date a la fecha de nacimiento. Crear una variable con el año de nacimiento.
#Primero, limpiamos la fecha de nacimiento, de la misma forma que el item previo, pero asignándole el formato date y luego lo mostramos en la base de datos.
library(lubridate)
base_students$BORN_DATE <- str_replace_all(base_students$BORN_DATE, "[^0-9-]", "")
print(base_students)
#c) Use la variable GENDER para crear una dummy que tome el valor de 1 para female y 0 para male.
# Limpiar la variable GENDER y mostrar
base_students$GENDER <- tolower(base_students$GENDER)
base_students$GENDER <- gsub("(.)\\1+", "\\1", base_students$GENDER)
print(base_students)
#Creamos la variable dummy:
base_students$GENDER_DUMMY <- ifelse(base_students$GENDER == "female", 1, 0)
print(base_students)
#d)Creamos la variable MAIL que contiene los usuarios de los correos electrónicos de los estudiantes, a partir de la variable MAIL
base_students$EMAIL <- str_extract(base_students$MAIL, "\\b\\w+")
print(base_students)
# e)Crear una variable asociada al DNI de los padres o apoderado.
#Primero, limpiamos la variable DNI_NUMBER:
if ("DNI_NUMBER" %in% names(base_students)) {
# Limpiar la variable DNI_NUMBER para que solo contenga números y símbolos
base_students$DNI_NUMBER <- gsub("[^[:digit:][:punct:]]", "", base_students$DNI_NUMBER)
} else {
print("La variable DNI_NUMBER no se encuentra en la base de datos.")
}
print(base_students)
#Luego, creamos la variable DNI que contiene únicamente números:
base_students$DNI <- gsub("[^[:digit:]]", "", base_students$DNI_NUMBER)
print(base_students)
nombre_correcto <- gsub("[^[:alpha:]\\s]", "", base_students$NAME)
nombre_separado <- strsplit(nombre_correcto, "\\s+")
nombres_separados <- lapply(nombre_separado, function(x) gsub("^\\d+|[[:punct:]]+$", "", x))
nombres_completos <- sapply(nombres_separados, function(x) paste0(x, collapse = " "))
base_students$NAME <- nombres_completos
nombre_correcto <- gsub("[^[:alpha:]\\s]", "", base_students$NAME)
nombre_separado <- strsplit(nombre_correcto, "\\s+")
nombres_separados <- lapply(nombre_separado, function(x) gsub("^\\d+|[[:punct:]]+$", "", x))
nombres_completos <- sapply(nombres_separados, function(x) paste0(x, collapse = " "))
base_students$NAME <- nombres_completos
nombre_correcto <- gsub("[^[:alpha:]\\s]", "", base_students$NAME)
base_datos$nombre <- gsub("[^[:alpha:] ]", "", base_datos$nombre)
nombre_correcto <- gsub("[^[:alpha:]\\s]", "", base_students$NAME)
base_students$nombre <- gsub("^([A-Za-z]+)\\s*([A-Za-z]+)$", "\\1", base_students$NAME)
base_students$apellido <- gsub("^([A-Za-z]+)\\s*([A-Za-z]+)$", "\\2", base_students$NAME)
nombre_correcto <- gsub("[^[:alpha:]\\s]", "", base_students$NAME)
separados <- strsplit(nombres_limpios, "\\s+")
separados <- strsplit(nombres_correcto, "\\s+")
separados <- strsplit(nombre_correcto, "\\s+")
base_students$NAME <- gsub("[^[:alpha:]\\s]", "", base_students$NAME)
base_students$NAME <- strsplit(nombre_correcto, "\\s+")
separados <- strsplit(base_students$NAME, "\\s+")
base_students$EDAD <- gsub("[^[:alpha:]\\s]", "", base_students$EDAD)
base_students$AGE <- gsub("[^[:alpha:]\\s]", "", base_students$AGE)
edades <- as.numeric(gsub("\\D", "", valores))
base_students$AGE <- gsub("\\D", "","\\D", "", base_students$AGE)
base_students$AGE <- gsub("\\D", "", base_students$AGE)
base_students$AGE <- gsub("\\b\\d+\\b", "\\1", base_students$AGE)
base_students$AGE <- gsub("\\d+", base_students$AGE)

sumaria <- bind_rows(
read_dta("../../data/enaho/sumaria-2015.dta"),
read_dta("../../data/enaho/sumaria-2016.dta"),
read_dta("../../data/enaho/sumaria-2017.dta"),
read_dta("../../data/enaho/sumaria-2018.dta"),
read_dta("../../data/enaho/sumaria-2019.dta"),
read_dta("../../data/enaho/sumaria-2020.dta")
)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(periodo, 1, 4))
# Leer todos los archivos de sumaria y juntarlos en un solo dataframe
sumaria <- bind_rows(
read_dta("../../data/enaho/sumaria-2015.dta"),
read_dta("../../data/enaho/sumaria-2016.dta"),
read_dta("../../data/enaho/sumaria-2017.dta"),
read_dta("../../data/enaho/sumaria-2018.dta"),
read_dta("../../data/enaho/sumaria-2019.dta"),
read_dta("../../data/enaho/sumaria-2020.dta")
)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año)
# Calcular el ingreso promedio per cápita por año y área
income_years <- sumaria %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza) %>%
group_by(año, area) %>%
summarise(
ingmpc = survey_mean(inghog1d, na.rm = T)
)
install.packages("srvyr") # Instalar el paquete
library(srvyr) # Cargar el paquete
# Leer todos los archivos de sumaria y juntarlos en un solo dataframe
sumaria <- bind_rows(
read_dta("../../data/enaho/sumaria-2015.dta"),
read_dta("../../data/enaho/sumaria-2016.dta"),
read_dta("../../data/enaho/sumaria-2017.dta"),
read_dta("../../data/enaho/sumaria-2018.dta"),
read_dta("../../data/enaho/sumaria-2019.dta"),
read_dta("../../data/enaho/sumaria-2020.dta")
)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año)
# Calcular el ingreso promedio per cápita por año y área
income_years <- sumaria %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza) %>%
group_by(año, area) %>%
summarise(
ingmpc = survey_mean(inghog1d, na.rm = T)
)
# Leer todos los archivos de sumaria y juntarlos en un solo dataframe
sumaria <- bind_rows(
read_dta("../../data/enaho/sumaria-2015.dta"),
read_dta("../../data/enaho/sumaria-2016.dta"),
read_dta("../../data/enaho/sumaria-2017.dta"),
read_dta("../../data/enaho/sumaria-2018.dta"),
read_dta("../../data/enaho/sumaria-2019.dta"),
read_dta("../../data/enaho/sumaria-2020.dta")
)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año)
# Calcular el ingreso promedio per cápita por año y área
income_years <- append_enaho %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza,
nest = TRUE) %>%
group_by(año, ubigeo) %>%
summarise(
inghog1d = survey_mean(ingmpc, na.rm = T)
)
# Leer todos los archivos de sumaria y juntarlos en un solo dataframe
sumaria <- bind_rows(
read_dta("../../data/enaho/sumaria-2015.dta"),
read_dta("../../data/enaho/sumaria-2016.dta"),
read_dta("../../data/enaho/sumaria-2017.dta"),
read_dta("../../data/enaho/sumaria-2018.dta"),
read_dta("../../data/enaho/sumaria-2019.dta"),
read_dta("../../data/enaho/sumaria-2020.dta")
)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año)
# Calcular el ingreso promedio per cápita por año y área
income_years <- sumaria %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza,
nest = TRUE) %>%
group_by(año, ubigeo) %>%
summarise(
inghog1d = survey_mean(ingmpc, na.rm = T)
)
# Leer todos los archivos de sumaria y juntarlos en un solo dataframe
sumaria <- bind_rows(
read_dta("../../data/enaho/sumaria-2015.dta"),
read_dta("../../data/enaho/sumaria-2016.dta"),
read_dta("../../data/enaho/sumaria-2017.dta"),
read_dta("../../data/enaho/sumaria-2018.dta"),
read_dta("../../data/enaho/sumaria-2019.dta"),
read_dta("../../data/enaho/sumaria-2020.dta")
)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año)
# Calcular el ingreso promedio per cápita por año y área
income_years <- sumaria %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza,
nest = TRUE) %>%
group_by(año, ubigeo) %>%
summarise(
inghog1d = survey_mean(inghog1d, na.rm = T)
)
income_years %>% ggplot(aes(x = año, y = inghog1d, group = ubigeo, colour = ubigeo)) +
geom_line()+
geom_point(size = 1.5) +
theme_bw() + # diseño de fondo
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018, 2019 , 2020)) +
ggtitle("Average monthly income percapita by area")+
xlab("")+
ylab("")
# Cargar los datos de cada año
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
# Unir los datos en un único dataframe
sumaria <- bind_rows(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año, area)
# Cargar los datos de cada año
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
# Unir los datos en un único dataframe
sumaria <- bind_rows(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año, area)
# Cargar los datos de cada año
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
# Unir los datos en un único dataframe
sumaria <- bind_rows(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año, area)
# Cargar los datos de cada año
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
# Unir los datos en un único dataframe
sumaria <- bind_rows(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
# Crear una variable para indicar el año de cada observación
sumaria <- sumaria %>% mutate(año = substr(año, 1, 4))
# Seleccionar las variables de interés
sumaria <- sumaria %>% select(conglome, estrato, pobreza, ubigeo, inghog1d, gashog2d, año, ubigeo)
# Calcular el ingreso promedio per cápita por año y área
income_years <- sumaria %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza,
nest = TRUE) %>%
group_by(año, ubigeo) %>%
summarise(
inghog1d = survey_mean(inghog1d, na.rm = T),
gashog2d = survey_mean(gashog2d, na.rm = T)
)
# Gráfico de la evolución del ingreso percápita mensual del hogar por área
ggplot(data = income_years, aes(x = año, y = inghog1d, group = ubigeo, color = ubigeo)) +
geom_line()+
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = seq(2015, 2020, by = 1)) +
ggtitle("Evolución del ingreso per cápita mensual del hogar por área") +
xlab("") +
ylab("Ingreso promedio per cápita mensual")
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
library(ggplot2)
# Seleccionar las variables de interés
ingreso <- sumaria %>%
select(ubigeo, año, inghog1d) %>%
mutate(año = as.numeric(substr(año, 1, 4)))
# Filtrar los años 2018-2020
ingreso <- ingreso %>%
filter(año >= 2018)
# Calcular el ingreso promedio per cápita por año y área
ingreso_promedio <- ingreso %>%
group_by(año, ubigeo) %>%
summarise(
inghog1d = mean(inghog1d, na.rm = TRUE)
)
# Crear el gráfico
ggplot(ingreso_promedio, aes(x = año, y = inghog1d, color = ubigeo)) +
geom_line() +
labs(title = "Evolución del ingreso per cápita mensual del hogar 2018-2020",
x = "Año", y = "Ingreso per cápita mensual")
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
library(ggplot2)
# Calcular el gasto promedio per cápita por año y área
expenses_years <- sumaria %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = pobreza,
nest = TRUE) %>%
group_by(año, ubigeo) %>%
summarise(
gashog2d = survey_mean(gashog2d, na.rm = T)
)
# Seleccionar los datos de interés (2018-2020)
expenses_years_plot <- expenses_years %>%
filter(año >= 2018 & año <= 2020)
# Crear el gráfico
ggplot(expenses_years_plot, aes(x = año, y = gashog2d, color = ubigeo)) +
geom_line() +
labs(title = "Evolución del gasto percápita mensual del hogar",
x = "Año", y = "Gasto per cápita mensual") +
scale_color_discrete(name = "Área", labels = c("Urbana", "Rural")) +
theme_minimal()
#3
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
#Evolución del ingreso percápita mensual del hogar 2018-2020 según área urbana o rural
#Unir los conjuntos de datos en uno solo
sumaria_18_20 <- rbind(sumaria_18, sumaria_19, sumaria_20)
#Seleccionar las variables como  (inghog1d), (año) y(ubigeo).
sumaria_18_20 <- select(sumaria_18_20, inghog1d, año, ubigeo)
#Filtrar los datos para que solo incluyan los años 2018, 2019 y 2020
#y luego agrupar por año y área.
sumaria_18_20 <- filter(sumaria_18_20, año >= 2018) %>%
group_by(año, ubigeo)
#calcular el ingreso per capita
ingreso_promedio <- summarise(sumaria_18_20, ingreso_promedio = mean(inghog1d))
#realizar el gráfico
ingreso_promedio %>%
ggplot(aes(x = año, y = inghog1d, group = ubigeo, colour = ubigeo)) +
geom_line() +
geom_point(size = 1.5) +
theme_bw() +
scale_x_continuous(breaks = c(2018, 2019, 2020)) +
ggtitle("Average monthly income percapita by area") +
xlab("") +
ylab("")
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
#Evolución del ingreso percápita mensual del hogar 2018-2020 según área urbana o rural
#Unir los conjuntos de datos en uno solo
sumaria_18_20 <- rbind(sumaria_18, sumaria_19, sumaria_20)
#Seleccionar las variables como  (inghog1d), (año) y(ubigeo).
sumaria_18_20 <- select(sumaria_18_20, inghog1d, año, ubigeo)
#Filtrar los datos para que solo incluyan los años 2018, 2019 y 2020
#y luego agrupar por año y área.
sumaria_18_20 <- filter(sumaria_18_20, año >= 2018) %>%
group_by(año, ubigeo)
#calcular el ingreso per capita
ingreso_promedio <- summarise(sumaria_18_20, ingreso_promedio = mean(inghog1d))
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
sumarias <- rbind(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
sumarias$ubigeo<- case_when(
sumarias$estrato <= 5 ~ 1,  # urbano
sumarias$estrato > 5 ~ 2    #rural
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
sumarias <- rbind(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
sumarias$ubigeo<- case_when(
sumarias$estrato <= 5 ~ 1,  # urbano
sumarias$estrato > 5 ~ 2    #rural
)
library(ggplot2)
# filtrar las observaciones del periodo 2015-2020
sumarias_filtrado <- sumarias %>% filter(año >= 2015 & año <= 2020)
# crear el gráfico
ggplot(sumarias_filtrado, aes(x = año, y = ingreso_pc, color = factor(ubigeo))) +
geom_line() +
scale_color_manual(values = c("blue", "green"),
labels = c("Urbano", "Rural")) +
labs(x = "Año", y = "Ingreso per cápita mensual del hogar",
color = "Área geográfica") +
theme_minimal()
View(sumarias)
library(ggplot2)
# filtrar las observaciones del periodo 2015-2020
sumarias_filtrado <- sumarias %>% filter(año >= 2015 & año <= 2020)
# crear el gráfico
ggplot(sumarias_filtrado, aes(x = año, y = inghog1d, color = factor(ubigeo))) +
geom_line() +
scale_color_manual(values = c("blue", "green"),
labels = c("Urbano", "Rural")) +
labs(x = "Año", y = "Ingreso per cápita mensual del hogar",
color = "Área geográfica") +
theme_minimal()
ggplot(sumarias_filtrado, aes(x = año, y = gashog2d, color = factor(ubigeo))) +
geom_line() +
scale_color_manual(values = c("blue", "green"),
labels = c("Urbano", "Rural")) +
labs(x = "Año", y = "Gasto per cápita mensual del hogar",
color = "Área geográfica") +
theme_minimal()
#Fijamos directorio
setwd("C:/Users/ALICIA/Documents/GitHub/1ECO35_2031_1_APUNTES/tarea4")
setwd("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data")
getwd()
library(rstudioapi)
library(pacman)
library(foreign)
library(foreign, lib.loc = "C:/Program Files/R/R-4.2.3/library")
install.packages("sjlabelled")
library(sjlabelled)
setwd("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data")
getwd()
datos_base1 <- read.spss("actos_est.sav",
use.value.labels = F,
to.data.frame = TRUE,
reencode = "UTF-8")
View(datos_base1)
# Obtenemos las etiquetas de las variables
attributes(datos_base1)$variable.labels
# Filtramos la base de datos para los tipos de eventos: desaparición, secuestros, reclutamiento forzado y muertes en atentados
# Si bien, no es necesario crear una base de datos para este caso, lo haremos para observar la reducción de observaciones
datos_f1 <- filter(datos_base1, IDTIPOAC == c("LDS", "LSE", "LRC", "MAT"))
# Se eliminan los valores duplicados de la columna IDACTO
datos_f1 <- datos_f1[!duplicated(datos_f1$IDACTO), ]
# Se crea una nueva base de datos filtrando idacto, idtipoac y departamento
df_select <- datos_f1[c("IDACTO","IDTIPOAC","DEPNA0","UBIDIST","PERIODO","LDS_LDT","LSE","LRC","MAT")]
View(df_select)
# Se renombran a algunas variables
colnames(df_select)[colnames(df_select)=="DEPNA0"] <- "DPTO"
colnames(df_select)[colnames(df_select)=="UBIDIST"] <- "DIST"
colnames(df_select)[colnames(df_select)=="PERIODO"] <- "PER"
df_select
=====================
# Se renombran a algunas variables
colnames(df_select)[colnames(df_select)=="DEPNA0"] <- "DPTO"
colnames(df_select)[colnames(df_select)=="UBIDIST"] <- "DIST"
colnames(df_select)[colnames(df_select)=="PERIODO"] <- "PER"
df_select
# Para cada departamento se obtiene el total de eventos de violencia y los renombraremos
tot_event_violen <- df_select %>% group_by(DPTO) %>%
summarise(TotalDesap = sum(LDS_LDT),    #renombramos
TotalSecu = sum(LSE),
TotalRe = sum(LRC),
TotalMuertes = sum(MAT))
# Para cada departamento se obtiene el total de eventos de violencia y los renombraremos
tot_event_violen <- df_select %>% group_by(DPTO) %>%
summarise(TotalDesap = sum(LDS_LDT),    #renombramos
TotalSecu = sum(LSE),
TotalRe = sum(LRC),
TotalMuertes = sum(MAT))
# Para cada distrito se obtiene el total de eventos de violencia y los renombraremos
tot_event_dist <- df_select %>% group_by(DIST) %>%
summarise(TotalDesap = sum(LDS_LDT),    #renombramos
TotalSecu = sum(LSE),
TotalRe = sum(LRC),
TotalMuertes = sum(MAT))
# Según su tipo a nivel departamento (DEPNAO) y periodo (PERIODO).
tot_dist_perio <- df_select %>% group_by(DPTO,PER) %>%
summarise(TotalDesap = sum(LDS_LDT),
TotalSecu = sum(LSE),
TotalRe = sum(LRC),
TotalMuertes = sum(MAT))
# Convertimos el DataFrame de pandas a data frame de R
df_tot_event_dist <- data.frame(tot_event_dist)
# Creamos variables con el logaritmo del total de eventos
df_tot_event_dist$Log_TotalDesap <- log(df_tot_event_dist$TotalDesap)
df_tot_event_dist$Log_TotalSecu <- log(df_tot_event_dist$TotalSecu)
df_tot_event_dist$Log_TotalRe <- log(df_tot_event_dist$TotalRe)
df_tot_event_dist$Log_TotalMuertes <- log(df_tot_event_dist$TotalMuertes)
View(df_tot_event_dist)
cat("\014")
#se fija el directorio
setwd("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data/enaho")
getwd()
#1
# se leyeron las siguientes bases de datos
enaho200_19 <- read_dta("../../data/enaho/enaho01-2019-200.dta")
enaho300_19 <- read_dta("../../data/enaho/enaho01a-2019-300.dta")
# se eligió nuestro Master data
enaho19 <- merge(enaho200_19, enaho300_19, by = c("conglome","vivienda","hogar","codperso"))
# se filtró
enaho19_filtrado <- enaho19  %>%
filter((p204 == 1 & p205 == 2) | (p204 == 2 & p206 == 1))
View(enaho19_filtrado)
enaho19_filtrado <- enaho19  %>%
filter((p204 == 1 & p205 == 2) | (p204 == 2 & p206 == 1))
#3
# se procede a leer las siguientes bases de datos
sumaria_15 <- read_dta("../../data/enaho/sumaria-2015.dta")
sumaria_16 <- read_dta("../../data/enaho/sumaria-2016.dta")
sumaria_17 <- read_dta("../../data/enaho/sumaria-2017.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
# concatenación de las filas de todos los sumaria desde 2015 hasta 2020.
sumarias <- rbind(sumaria_15, sumaria_16, sumaria_17, sumaria_18, sumaria_19, sumaria_20)
# se estableció la diferencia del ubigeo entre rural y urbano
sumarias$ubigeo<- case_when(
sumarias$estrato <= 5 ~ 1,  # urbano
sumarias$estrato > 5 ~ 2    #rural
)
#Evolución del ingreso y gasto percápita mensual del hogar 2018-2020 según área urbana o rural
library(ggplot2)
# se filtraron las observaciones del periodo 2015-2020
sumarias_filtrado <- sumarias %>% filter(año >= 2015 & año <= 2020)
# se creó el gráfico del ingreso per cápita del hogar 2018-2020
ggplot(sumarias_filtrado, aes(x = año, y = inghog1d, color = factor(ubigeo))) +
geom_line() +
scale_color_manual(values = c("blue", "green"),
labels = c("Urbano", "Rural")) +
labs(x = "Año", y = "Ingreso per cápita mensual del hogar",
color = "Área geográfica") +
theme_minimal()
# se creó el gráfico del gasto per cápita del hogar 2018-2020
ggplot(sumarias_filtrado, aes(x = año, y = gashog2d, color = factor(ubigeo))) +
geom_line() +
scale_color_manual(values = c("blue", "green"),
labels = c("Urbano", "Rural")) +
labs(x = "Año", y = "Gasto per cápita mensual del hogar",
color = "Área geográfica") +
theme_minimal()
#1
#se limpió el panel
cat("\014")
#se colocó el directorio
setwd("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data/endes")
getwd()
library(haven)
#se leyeron las bases de datos de la endes
rech84dv <- read_dta("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data/endes/REC84DV.dta")
rech0 <- read_dta("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data/endes/RECH0.dta")
rech1 <- read_dta("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data/endes/RECH1.dta")
rech23 <- read_dta("C:/Users/nmiyamoto/Documents/GitHub/1ECO35_2023_1/data/endes/RECH23.dta")
library(dplyr)
library(tidyverse)
#se renombró para que coincidan en nombre con las demas bases de datos
rech84dv <- rech84dv %>%
rename(HHID = caseid)
#se juntaron las bases de datos
lista_datos <- list(rech84dv, rech0, rech1, rech23)
datos_endes <- reduce(lista_datos, full_join, by = "HHID")
datos_endes
#se creó una variable dummy de violencia física y sexual
library(dplyr)
datos_endesdummy <- datos_endes %>%
mutate(d105a_dummy = ifelse(d105a %in% c(1, 2), 1, 0),
d105b_dummy = ifelse(d105b %in% c(1, 2), 1, 0),
d105c_dummy = ifelse(d105c %in% c(1, 2), 1, 0),
d105d_dummy = ifelse(d105d %in% c(1, 2), 1, 0),
d105e_dummy = ifelse(d105e %in% c(1, 2), 1, 0))
datos_endesdummy
# 0 (respuesta No), 1 (Frecuentemente), 2 (Algunas veces) y 3 (Nunca).
# se creó la variable dummy llamada physical = 1
datos_endesphy <- datos_endesdummy %>%
mutate(physical = ifelse(d105a_dummy + d105b_dummy + d105c_dummy + d105d_dummy + d105e_dummy > 0, 1, 0))
datos_endesphy
enaho19_filtrado <- enaho19  %>%
filter((p204 == 1 & p205 == 2) | (p204 == 2 & p206 == 1))

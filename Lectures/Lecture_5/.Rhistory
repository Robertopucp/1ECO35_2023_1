theme_bw() +
theme(panel.grid = element_blank())
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled, lubridate)
income_years <- append_enaho %>%
mutate(ingmpc = inghog1d/(mieperho*12),
año = year( as.Date( año, format="%Y") ) )%>%   # convertir a numérico la fecha
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(año) %>%
summarise(
ingmpc = survey_mean(ingmpc, na.rm = T)
)
income_years %>%
ggplot(aes(x = año, y = ingmpc)) +
geom_line(color = "darkgray") +
geom_point( color = "darkblue", size = 3) +
theme_bw() +
theme(panel.grid = element_blank())
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultánea
# Si la librería no está instalada, entonces lo instala y llama para su uso
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled, lubridate)
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# haven tambien permite la lectura de base de datos de diferentes extensiones (i.e stata)
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
enaho100_19 <- read_dta("../../data/enaho/enaho01-2020-100.dta")
enaho200_19 <- read_dta("../../data/enaho/enaho01-2019-200.dta")
enaho300_19 <- read_dta("../../data/enaho/enaho01a-2019-300.dta")
enaho400_19 <- read_dta("../../data/enaho/enaho01a-2019-400.dta")
enaho500_19 <- read_dta("../../data/enaho/enaho01a-2019-500.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
# Join datasets
#data1 <-
df <- data.frame(
id = 1:5,
color = c("red", "blue", "green", NA, "red"),
size = c("small", "large", "medium", "medium", "small"),
type = c("A", "B", "C", NA, "A")
)
# Elegimos nuestro Master data
enaho19 <- enaho200_19 %>%
full_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso"))
enaho19 <- enaho200_19 %>%
inner_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso"))
enaho19 <- enaho200_19 %>%
left_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso"))
enaho19 <- enaho200_19 %>%
left_join(enaho300_19, by = c("conglome","vivienda","hogar","codperso")) %>%
left_join(enaho400_19, by = c("conglome","vivienda","hogar","codperso")) %>%
left_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso")) %>%
left_join(enaho100_19, by = c("conglome","vivienda","hogar")) %>%
left_join(sumaria_19, by = c("conglome","vivienda","hogar"))
table(enaho19$p300a)
names(enaho19)
attr(enaho19$p300a, 'labels')
attr(enaho19$p301a, 'label')
attr(enaho19$pobreza, 'labels')
lapply(enaho19, attr, 'labels')
lapply(enaho19, attr, 'label')
#-----------------------------------------------#
enaho19$lengua <- case_when(
enaho19$p300a == 4 ~ 1,
enaho19$p300a < 4 ~ 2,
enaho19$p300a > 5 ~ 3
)
# siempre hacer crucce de variables para verificar que el proceso sea el correcto
# frecuencia relativa por columna
table(enaho19$p300a, enaho19$lengua)
prop.table(table(enaho19$p300a, enaho19$lengua), margin = 2)
enaho19$area <- case_when(
enaho19$estrato <= 5 ~ 1,
enaho19$estrato > 5 ~ 2
)
# años de educación #
enaho19 <- enaho19 %>% mutate(
educ1 = case_when(
between(p301a,1,4) ~ 0,
between(p301a,5,6) ~ 6,
between(p301a,7,10) ~ 11,
p301a == 11 ~ 16
))
enaho19$educ2 <- apply(enaho19[,c("p301b","p301c")], 1 , sum , na.rm = T)
enaho19$years_educ <- apply(enaho19[,c("educ1","educ2")], 1 , sum , na.rm = T)
enaho19 <- enaho19 %>% mutate(
educ1 = case_when(
between(p301a,1,4) ~ 0,
between(p301a,5,6) ~ 6,
between(p301a,7,10) ~ 11,
p301a == 11 ~ 16
)
) %>% rowwise() %>%
mutate(
educ2 = sum(p301b, p301c, na.rm = T),
years_educ = sum(educ1, educ2, na.rm = T)
) %>%
ungroup()
# Crear dummies por cad anivel educativo
enaho19 <- dummy_cols(enaho19, select_columns = 'p301a')
enaho19$p301a_NA <- NULL
# Variables de pobreza #
enaho19 <- enaho19 %>%
mutate(dpto_code = substr(ubigeo, 1, 2),
ubigeo3 = str_pad(ubigeo2, 6, pad ="0"),
dpto = case_when(
dpto_code == "01" ~ "Amazonas", dpto_code == "02" ~ "Ancash",
dpto_code == "03" ~ "Apurimac", dpto_code == "04" ~ "Arequipa",
dpto_code == "05" ~ "Ayacucho", dpto_code == "06" ~ "Cajamarca",
dpto_code == "07" ~ "Callao"  , dpto_code == "08" ~ "Cusco",
dpto_code == "09" ~ "Huancavelica",dpto_code == "10" ~ "Huanuco",
dpto_code == "11" ~ "Ica"     , dpto_code == "12" ~ "Junin",
dpto_code == "13" ~ "La Libertad",dpto_code == "14" ~ "Lambayaque",
dpto_code == "15" ~ "Lima"    , dpto_code == "16" ~ "Loreto",
dpto_code == "17" ~ "Madre de Dios",dpto_code == "18" ~ "Moquegua",
dpto_code == "19" ~ "Pasco"   ,dpto_code == "20" ~ "Piura",
dpto_code == "21" ~ "Puno"    ,dpto_code == "22" ~ "San Martin",
dpto_code == "23" ~ "Tacna"   ,dpto_code == "24" ~ "Tumbes",
dpto_code == "25" ~ "Ucayali"
),
gmensual_pc = gashog2d/(mieperho*12),  # gasto del hogar mensual percapita
imensual_pc = inghog1d/(mieperho*12)   # ingreso del hogar percapita
)
# Variable binaria de pobreza: pobre y no pobre #
enaho19$dummy_pobre <- ifelse(enaho19$pobreza %in% c(1,2), 1, 0)
# var label
var_label(enaho19) <- list(dummy_pobre = "Dummy de pobreza")
# value labels
val_labels(enaho19$dummy_pobre) <- c("Hogar pobre" = 0,
"Hogar no pobre" = 1)
val_labels(enaho19$area) <- c("Urbano" = 0,
"Rural" = 1)
# Replace
enaho19$dummy_pobre <- replace( enaho19$dummy_pobre ,
which( enaho19$pobreza ==1 ), 1 )
enaho19$dummy_pobre <- replace( enaho19$dummy_pobre ,
which( enaho19$pobreza ==2 ), 2 )
enaho19$dummy_pobre <- replace( enaho19$dummy_pobre ,
which( enaho19$pobreza ==3 ), 3 )
table(enaho19$pobreza, enaho19$dummy_pobre)
enaho19$dummy_pobre <- ifelse(enaho19$pobreza %in% c(1,2), 1, 0)
# usando pip %>%
enaho19 <- enaho19 %>%
mutate(
dummy_pobre2 = 0,
dummy_pobre2 = replace(dummy_pobre2, which(pobreza == 1), 1),
dummy_pobre2 = replace(dummy_pobre2, which(pobreza == 2), 2),
dummy_pobre2 = replace(dummy_pobre2, which(pobreza == 3), 3),
)
table(enaho19$pobreza, enaho19$dummy_pobre2)
# Tasa de pobreza a nivel región usando la libreru survey
# Survey ----
# primero se declara el diseño muestral de la encuesta
enaho19$factorpob <- round(enaho19$factor07*enaho19$mieperho, 1)
data_ind <- enaho19  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(dpto) %>%
summarise(
poverty_rate = survey_mean(dummy_pobre, na.rm = T)*100
)
# Uso de groupby
enaho19  %>%  group_by(dpto) %>%
summarise(
poverty_rate = mean(dummy_pobre, na.rm = T)*100
) %>% as.data.frame()
# Uso de libreria survey #
# tabla de frecuencia relativa
# Diseño de la encuesta
design <- svydesign(
data = enaho19,
ids = ~ conglome,
strata = ~estrato,
weights = ~ factorpob,
nest = TRUE
)
# tabla
prop.table(svytable(~ dpto + dummy_pobre, design = design), 1)
# Trabajo infantil y adolescente --------------------------------------
# ifelse coloca missing si alguna de las varaibles de la condicional es NA
# Esto es diferente en Python
enaho19 <- enaho19 %>%
mutate(
dchildwork = ifelse( between(p208a,5,17), 0 , NA),
dchildwork = replace(dchildwork, which(
between(p208a,5,17) & (p210 == 1 | (p210 == 2 & (! t211 %in% c(9,11))) )
), 1),
dmujer = ifelse(p207== 1, 0, 1)
)
# label de la variable dummy di el menor de edad labora
val_labels(enaho19$dchildwork) <- c("No trabajo" = 0,
"Trabaja" = 1)
design <- svydesign(
data = enaho19,
ids = ~ conglome,
strata = ~estrato,
weights = ~ factorpob,
nest = TRUE
)
# area 1 (urbano), 2 (rural)
prop.table(svytable(~ area + dchildwork, design = design), 1)
prop.table(svytable(~ dmujer + dchildwork, design = design), 1)
prop.table(svytable(~ dpto + dchildwork, design = design), 1)
# Append --------------------------------
# Ingreso mensual per cápital del hogar promedio 2018-2020
append_enaho <- bind_rows(sumaria_18, sumaria_19, sumaria_20)
append_enaho$factorpob <-  round(append_enaho$factor07*append_enaho$mieperho, 1)
income_years <- append_enaho %>%
mutate(ingmpc = inghog1d/(mieperho*12),
año = year( as.Date( año, format="%Y") ) )%>%   # convertir a numérico la fecha
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(año) %>%
summarise(
ingmpc = survey_mean(ingmpc, na.rm = T)
)
View(income_years)
str(income_years)
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultánea
# Si la librería no está instalada, entonces lo instala y llama para su uso
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled)
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultánea
# Si la librería no está instalada, entonces lo instala y llama para su uso
p_load(readxl, tidyverse, foreign,fastDummies, haven, survey,
srvyr, labelled)
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# haven tambien permite la lectura de base de datos de diferentes extensiones (i.e stata)
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
enaho100_19 <- read_dta("../../data/enaho/enaho01-2020-100.dta")
enaho200_19 <- read_dta("../../data/enaho/enaho01-2019-200.dta")
enaho300_19 <- read_dta("../../data/enaho/enaho01a-2019-300.dta")
enaho400_19 <- read_dta("../../data/enaho/enaho01a-2019-400.dta")
enaho500_19 <- read_dta("../../data/enaho/enaho01a-2019-500.dta")
sumaria_19 <- read_dta("../../data/enaho/sumaria-2019.dta")
sumaria_20 <- read_dta("../../data/enaho/sumaria-2020.dta")
sumaria_18 <- read_dta("../../data/enaho/sumaria-2018.dta")
# Join datasets
#data1 <-
df <- data.frame(
id = 1:5,
color = c("red", "blue", "green", NA, "red"),
size = c("small", "large", "medium", "medium", "small"),
type = c("A", "B", "C", NA, "A")
)
# Elegimos nuestro Master data
enaho19 <- enaho200_19 %>%
full_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso"))
enaho19 <- enaho200_19 %>%
inner_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso"))
enaho19 <- enaho200_19 %>%
left_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso"))
enaho19 <- enaho200_19 %>%
left_join(enaho300_19, by = c("conglome","vivienda","hogar","codperso")) %>%
left_join(enaho400_19, by = c("conglome","vivienda","hogar","codperso")) %>%
left_join(enaho500_19, by = c("conglome","vivienda","hogar","codperso")) %>%
left_join(enaho100_19, by = c("conglome","vivienda","hogar")) %>%
left_join(sumaria_19, by = c("conglome","vivienda","hogar"))
table(enaho19$p300a)
names(enaho19)
attr(enaho19$p300a, 'labels')
attr(enaho19$p301a, 'label')
attr(enaho19$pobreza, 'labels')
lapply(enaho19, attr, 'labels')
lapply(enaho19, attr, 'label')
#-----------------------------------------------#
enaho19$lengua <- case_when(
enaho19$p300a == 4 ~ 1,
enaho19$p300a < 4 ~ 2,
enaho19$p300a > 5 ~ 3
)
# siempre hacer crucce de variables para verificar que el proceso sea el correcto
# frecuencia relativa por columna
table(enaho19$p300a, enaho19$lengua)
prop.table(table(enaho19$p300a, enaho19$lengua), margin = 2)
enaho19$area <- case_when(
enaho19$estrato <= 5 ~ 1,
enaho19$estrato > 5 ~ 2
)
# años de educación #
enaho19 <- enaho19 %>% mutate(
educ1 = case_when(
between(p301a,1,4) ~ 0,
between(p301a,5,6) ~ 6,
between(p301a,7,10) ~ 11,
p301a == 11 ~ 16
))
enaho19$educ2 <- apply(enaho19[,c("p301b","p301c")], 1 , sum , na.rm = T)
enaho19$years_educ <- apply(enaho19[,c("educ1","educ2")], 1 , sum , na.rm = T)
enaho19 <- enaho19 %>% mutate(
educ1 = case_when(
between(p301a,1,4) ~ 0,
between(p301a,5,6) ~ 6,
between(p301a,7,10) ~ 11,
p301a == 11 ~ 16
)
) %>% rowwise() %>%
mutate(
educ2 = sum(p301b, p301c, na.rm = T),
years_educ = sum(educ1, educ2, na.rm = T)
) %>%
ungroup()
# Crear dummies por cad anivel educativo
enaho19 <- dummy_cols(enaho19, select_columns = 'p301a')
enaho19$p301a_NA <- NULL
# Variables de pobreza #
enaho19 <- enaho19 %>%
mutate(dpto_code = substr(ubigeo, 1, 2),
ubigeo3 = str_pad(ubigeo2, 6, pad ="0"),
dpto = case_when(
dpto_code == "01" ~ "Amazonas", dpto_code == "02" ~ "Ancash",
dpto_code == "03" ~ "Apurimac", dpto_code == "04" ~ "Arequipa",
dpto_code == "05" ~ "Ayacucho", dpto_code == "06" ~ "Cajamarca",
dpto_code == "07" ~ "Callao"  , dpto_code == "08" ~ "Cusco",
dpto_code == "09" ~ "Huancavelica",dpto_code == "10" ~ "Huanuco",
dpto_code == "11" ~ "Ica"     , dpto_code == "12" ~ "Junin",
dpto_code == "13" ~ "La Libertad",dpto_code == "14" ~ "Lambayaque",
dpto_code == "15" ~ "Lima"    , dpto_code == "16" ~ "Loreto",
dpto_code == "17" ~ "Madre de Dios",dpto_code == "18" ~ "Moquegua",
dpto_code == "19" ~ "Pasco"   ,dpto_code == "20" ~ "Piura",
dpto_code == "21" ~ "Puno"    ,dpto_code == "22" ~ "San Martin",
dpto_code == "23" ~ "Tacna"   ,dpto_code == "24" ~ "Tumbes",
dpto_code == "25" ~ "Ucayali"
),
gmensual_pc = gashog2d/(mieperho*12),  # gasto del hogar mensual percapita
imensual_pc = inghog1d/(mieperho*12)   # ingreso del hogar percapita
)
# Variable binaria de pobreza: pobre y no pobre #
enaho19$dummy_pobre <- ifelse(enaho19$pobreza %in% c(1,2), 1, 0)
# var label
var_label(enaho19) <- list(dummy_pobre = "Dummy de pobreza")
# value labels
val_labels(enaho19$dummy_pobre) <- c("Hogar pobre" = 0,
"Hogar no pobre" = 1)
val_labels(enaho19$area) <- c("Urbano" = 0,
"Rural" = 1)
# Replace
enaho19$dummy_pobre <- replace( enaho19$dummy_pobre ,
which( enaho19$pobreza ==1 ), 1 )
enaho19$dummy_pobre <- replace( enaho19$dummy_pobre ,
which( enaho19$pobreza ==2 ), 2 )
enaho19$dummy_pobre <- replace( enaho19$dummy_pobre ,
which( enaho19$pobreza ==3 ), 3 )
table(enaho19$pobreza, enaho19$dummy_pobre)
enaho19$dummy_pobre <- ifelse(enaho19$pobreza %in% c(1,2), 1, 0)
# usando pip %>%
enaho19 <- enaho19 %>%
mutate(
dummy_pobre2 = 0,
dummy_pobre2 = replace(dummy_pobre2, which(pobreza == 1), 1),
dummy_pobre2 = replace(dummy_pobre2, which(pobreza == 2), 2),
dummy_pobre2 = replace(dummy_pobre2, which(pobreza == 3), 3),
)
table(enaho19$pobreza, enaho19$dummy_pobre2)
# Tasa de pobreza a nivel región usando la libreru survey
# Survey ----
# primero se declara el diseño muestral de la encuesta
enaho19$factorpob <- round(enaho19$factor07*enaho19$mieperho, 1)
data_ind <- enaho19  %>%
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(dpto) %>%
summarise(
poverty_rate = survey_mean(dummy_pobre, na.rm = T)*100
)
# Uso de groupby
enaho19  %>%  group_by(dpto) %>%
summarise(
poverty_rate = mean(dummy_pobre, na.rm = T)*100
) %>% as.data.frame()
# Uso de libreria survey #
# tabla de frecuencia relativa
# Diseño de la encuesta
design <- svydesign(
data = enaho19,
ids = ~ conglome,
strata = ~estrato,
weights = ~ factorpob,
nest = TRUE
)
# tabla
prop.table(svytable(~ dpto + dummy_pobre, design = design), 1)
# Trabajo infantil y adolescente --------------------------------------
# ifelse coloca missing si alguna de las varaibles de la condicional es NA
# Esto es diferente en Python
enaho19 <- enaho19 %>%
mutate(
dchildwork = ifelse( between(p208a,5,17), 0 , NA),
dchildwork = replace(dchildwork, which(
between(p208a,5,17) & (p210 == 1 | (p210 == 2 & (! t211 %in% c(9,11))) )
), 1),
dmujer = ifelse(p207== 1, 0, 1)
)
# label de la variable dummy di el menor de edad labora
val_labels(enaho19$dchildwork) <- c("No trabajo" = 0,
"Trabaja" = 1)
design <- svydesign(
data = enaho19,
ids = ~ conglome,
strata = ~estrato,
weights = ~ factorpob,
nest = TRUE
)
# area 1 (urbano), 2 (rural)
prop.table(svytable(~ area + dchildwork, design = design), 1)
prop.table(svytable(~ dmujer + dchildwork, design = design), 1)
prop.table(svytable(~ dpto + dchildwork, design = design), 1)
# Append --------------------------------
# Ingreso mensual per cápital del hogar promedio 2018-2020
append_enaho <- bind_rows(sumaria_18, sumaria_19, sumaria_20)
append_enaho$factorpob <-  round(append_enaho$factor07*append_enaho$mieperho, 1)
income_years <- append_enaho %>%
mutate(ingmpc = inghog1d/(mieperho*12),
año =  as.Date( año, format="%Y") )%>%   # convertir a numérico la fecha
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(año) %>%
summarise(
ingmpc = survey_mean(ingmpc, na.rm = T)
)
income_years %>%
ggplot(aes(x = año, y = ingmpc)) +
geom_line(color = "darkgray") +
geom_point( color = "darkblue", size = 3) +
theme_bw() +
theme(panel.grid = element_blank())
income_years <- append_enaho %>%
mutate(ingmpc = inghog1d/(mieperho*12),
año =  as.numeric(año))%>%   # convertir a numérico la fecha
as_survey_design(ids = conglome,
strata = estrato,
weight = factorpob) %>%
group_by(año) %>%
summarise(
ingmpc = survey_mean(ingmpc, na.rm = T)
)
income_years %>%
ggplot(aes(x = año, y = ingmpc)) +
geom_line(color = "darkgray") +
geom_point( color = "darkblue", size = 3) +
theme_bw() +
theme(panel.grid = element_blank()) +
scale_x_continuous(breaks = c(2018,2019,2020))
income_years %>%
ggplot(aes(x = año, y = ingmpc)) +
geom_line(color = "darkgray") +
geom_point( color = "darkblue", size = 3) +
theme_bw() +
theme(panel.grid = element_blank()) +
scale_x_continuous(breaks = c(2018,2019,2020)) +
ggtitle("Average monthly income percapita")+
xlab("")+
ylab("")
income_years %>%
ggplot(aes(x = año, y = ingmpc)) +
geom_line(color = "darkgray") +
geom_point( color = "darkblue", size = 3) +
theme_bw() +
theme(panel.grid = element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(2018,2019,2020)) +
ggtitle("Average monthly income percapita")+
xlab("")+
ylab("")

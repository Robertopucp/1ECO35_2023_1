rm(list = ls())
graphics.off()
cat("\014")
library(dplyr)
library(stringr)
a1 <- 3.1416
x <- sqrt(150) ; x   # ; print()
y <- log(x) ; y
z <- round(y, 2) ; z
w <- abs(z) ; w
while without ending, the condition is always met
i <- 0
i <- 0
while(i < 10) {
print(i + 1)
}
n environment variables
i <- 0
while(i < 10) {
i = i + 1  # contador
print(i)
}
#  saving
S <- 1000
iods
year <- 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
#  saving
S <- 1000
# Periods
n <- 10
# interes rate
i <- 0.025
year <- 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
## For ----
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S)
}
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S)
}
<- 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S, "\n")
}
saving
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
#  saving
S <- 1000
# Periods
n <- 10
# interes rate
i <- 0.025
year <- 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S, "\n")
}
## For ----
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S)
}
#  saving
S <- 1000
# Periods
n <- 10
# interes rate
i <- 0.025
year <- 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S)
}
ages <-  1:10000
for (age in ages) {
print(age+10 )
}
ages <-  1:10000
print(age+10 )
y <- c()  #vector vacío
y <- c()  #vector vacío
for(i in 1:1000) {
y[i] <- log(ages[i])
}
#------------------#
# Measure loop time
#------------------#
for(i in 1:1000) {
y[i] <- log(ages[i])
}
for(i in 1:1000) {
y[i] <- log(ages[i])
}
for(i in 1:1000) {
y[i] <- log(ages[i])
}
r ----
ages <-  1:10000
start_time <- Sys.time()
for(i in 1:1000) {
y[i] <- log(ages[i])
print(i)
}
print(Sys.time() - start_time)    # slow
start_time <- Sys.time()
y <- log(ages[1:1000])
print(Sys.time() - start_time)    # fast
or and Next ----
or and Next ----
for (i in 1:50) {
if(i %in% 15:20) { # Ignora los primeros 20 elementos
break
}
cat("Ejecutanto",i,"\n")
}
x <- list(50, 70, 120, 250, 350, 420)
for (i in 1:6) {
if (x[[i]] <= 100) {
cat("Compra de", x[[i]], "soles y pago en efectivo ")
}
else if (x[[i]] <= 300) {
cat("Compra de", x[[i]], "soles y pago con tarjeta de débito ")
}
else if (300 < x[[i]]) {
cat("Compra de", x[[i]], "soles y pago con tarjeta de crédito ")
}
}
x <- list(50, 70, 120, 250, 350, 420)
for (i in 1:6) {
if (x[[i]] <= 100) {
cat("Compra de", x[[i]], "soles y pago en efectivo ", "\n")
}
else if (x[[i]] <= 300) {
cat("Compra de", x[[i]], "soles y pago con tarjeta de débito", "\n")
}
else if (300 < x[[i]]) {
cat("Compra de", x[[i]], "soles y pago con tarjeta de crédito","\n" )
}
}
cat("\014")
library(readxl)
library(dplyr)
library(rstudioapi)
library(pacman)
p_load(dplyr, readxl, rstudioapi)
# En los siguientes códigos se utilizarán dos listas (x e y)
# elaboradas con números al azar dentro de los marcos. Esto con
# la intención de que el condicional permita ofrecer resultados
# distintos dependiendo del valor que se tome.
#Ejercicio 1: Use un condicional que imprima el valor
#de compra y el tipo de pago
x <- list(50, 70, 120, 250, 350, 420)
for (i in 1:6) {
if (x[[i]] <= 100) {
cat("Compra de", x[[i]], "soles y pago en efectivo ", "\n")
}
else if (x[[i]] <= 300) {
cat("Compra de", x[[i]], "soles y pago con tarjeta de débito", "\n")
}
else if (300 < x[[i]]) {
cat("Compra de", 0.9*x[[i]], "soles y pago con tarjeta de crédito","\n" )
}
}
t <- list(100, 152, -1, 8, 12, 156.35, -10, 100, -0.5, 30, 1050, 7, -10)
for (i in 1:13) {
if (t[[i]] < 0) {
next
}
if (t[[i]] > 1000) {
break
}
cat("La utilidad neta anual es", t[[i]], "millones ")
}
t <- list(100, 152, -1, 8, 12, 156.35, -10, 100, -0.5, 30, 1050, 7, -10)
for (i in 1:13) {
if (t[[i]] < 0) {
next
}
if (t[[i]] > 1000) {
break
}
cat("La utilidad neta anual es", t[[i]], "millones ", "/n")
}
#Se creo la lista t, para poder colocar todos los valores
#de las utilidades mencionadas en el ejercicio. Luego
#se tomó elemento por elemento para ser evaluado y analizar
#si cumplían con las condiciones sol
t <- list(100, 152, -1, 8, 12, 156.35, -10, 100, -0.5, 30, 1050, 7, -10)
for (i in 1:13) {
if (t[[i]] < 0) {
next
}
if (t[[i]] > 1000) {
break
}
cat("La utilidad neta anual es", t[[i]], "millones ", "\n")
}
factorial <- function(n) {
if (n < 0) {
stop("No se puede calcular el factorial de un número negativo.")
}
if (n == 0) {
return(1)
}
fact <- 1
for (i in 1:n) {
fact <- fact * i
}
return(fact)
}
# Funcion para calcular la masa
masa_corporal <- function(p,t,e) {
if ( 18.5 < p/t^2 & p/t^2 < 24.9 ) {
c <- "Normal"
}
if ( 25 < p/t^2 & p/t^2 < 29.9 ) {
c <- "Aumentado"
}
if ( 30 < p/t^2 & p/t^2 < 34.9 ) {
c <- "Moderado"
}
if ( 35 < p/t^2 & p/t^2 < 39.9 ) {
c <- "Severo"
}
if ( 40 < p/t^2 ) {
c <- "Muy Severo"
}
paste("El estudiante",e, "tiene un peso de ", p, "y una talla de", t, "por lo tanto su indice es de ",round(p/t^2,2), "y su clasificacion es",c)
}
b<-masa_corporal(70,1.5,1)
b
esarias
# extraccion y orden de datos
datos <- read.csv("G:/Mi unidad/1ECO35_2023_1/data/Portafolio.csv")
# extraccion y orden de datos
datos <- read.csv("G:/Mi unidad/1ECO35_2023_1/data/Portafolio.csv")

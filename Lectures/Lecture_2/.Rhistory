#install.packages("dplyr")
#install.packages("stringr")
library(dplyr) # librarfor cleaning datasets
library(stringr)
str0 <- 'I love-Python and not R'
str1 <- strsplit(str0, ' ')
print(str1)
print(str1)
str2 <- strsplit(str0, split="[- ]")
print(str2)
str4 <- strsplit (str0, "and")
print(str4)
str5<- 'Allison'
print(str5)
str1 <- strsplit(str0, ' ') #str1 (es una lista) contiene separadamente de este texto
print(str1)
str4 <- strsplit (str0, "and")
print(str4)
str5<- 'Allison'
print(str5)
str4 <- strsplit (str0, "and")
print(str4)
str5[[2]]= 'Allison'
print(str5)
a == a
a¨ == ¨a¨
¨a¨ == ¨a¨
'a' =='a'
1 == 1
z1 <- (1==1)
typeof(z1)
z1 <- as.integer(z1)
print(z1)
class(z1)
z2 <- (10 > 20)
as.integer(z2)
str1
a <- c(1,2,3,4,"Perú")
print(a)
class(a)
class(a[1])
c2 <- c("Red", "Green", "Purple")
print(c2)
c2[4]=list(c(8,5,3))
c2 <- c("Red", "Green", "Purple")
print(c2)
c2[4]=list(c(8,5,3))
c2 <- c("Red", "Green", "Purple")
print(c2)
c2[4]=list(c("rojo","verde","morado"))
<- c("Red", "Green", "Purple")
print(c2)
c2[4]=list(c5("rojo","verde","morado"))
c2 <- c("Red", "Green", "Purple")
print(c2)
c2[4]=list(c2("rojo","verde","morado"))
c2 <- c("Red", "Green", "Purple")
print(c2)
c2[4]=list(c("rojo","verde","morado"))
a <- c(1,2,3,4)
a <- append(a, 5)
print(a)
b <-  rep(2,3) # repeat 2, 3 times
print(b)
append(a,b)
print(sample(1:100, size = 10))
ventor<-sample(1:100,size=10)
vector<-sample(1:100,size=10)
y <- seq(from = 0, to = 19, by = 2)
y <- seq(0, 19, 2)
print(y)
typeof(y)
y[1]
# Second example
y <- seq( 1, 10)
print(y)
# Alternatives
seq(100)
1:100 # easy w
seqex <- seq(100,1000, length.out = 50)
length(seqex)
str4 <- strsplit (str0, "and")
print(str4)
str4[[2]]="Allison"
print(str4)
str_split(string_1, "w")
#-------------------#
str0 <- 'I love-Python and not R'
#Separar Strings
str1 <- strsplit(str0, ' ') #str1 (es una lista) contiene separadamente de este texto
print(str1)
str2 <- strsplit(str0, split="[- ]")
print(str2)
str4 <- strsplit (str0, "and")
print(str4)
str4[[2]]="Allison"
print(str4)
dis2 <- list('ATE', 'BARRANCO','BREÃñA', 'CALLAO', 'CARABAYLLO','CHACLACAYO','CHORRILLOS','CIENEGUILLA'
,'COMAS','EL_AGUSTINO','INDEPENDENCIA')
dis2[[1]] # get element
dis2[2:5]
dis2[-1] #
unlist(dis2)
num <- list(13,5,5,8,9,10,5,8,13,1,20)
append(num, 102)
num2 <- list(10,20,30)
append(num, num2)
cat("Suma:", sum(unlist(num)),'\n', "Minimo:", min(unlist(num)), '\n', "Maximo:", max(unlist(num)))
# list made of many class objects
list1 <- list(100:130, "R", list(TRUE, FALSE))
### Plot histogram ----
X <- rnorm(1000, mean=1, sd=0.5)
Xbar <- mean(X)
Sigma2 <- sum((Xbar-X)^2)/length(X)
Sigma = sqrt(Sigma2)
hist(X, breaks = 100)
hist(X, breaks = 100)
a1<-"Facultad de Ciencias Sociales"
economia <- paste0(c1,'\ 2023') #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste0(c1,'\ 2023') #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste0(a1,'\ 2023') #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste0(a1,' \ 2023') #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste0(a1,'\2023') #paste0 une sin espacios
print(economia)
c1 <- "First python code"
c2 <- 'at R y python Class'
c3 <- c1 + c2 # error
# paste let us to join strings
# paste0
a <- paste0(c1,' : semester 2022-1') #paste0 une sin espacios
print(a)
# paste
a <- paste(c1,'semester 2022-1', sep = " : ")
print(a)
d <- 2022
paste0(c1,' : semester ',d, '-1')
a1<-"Facultad de"
economia <- paste(a1, "Ciencias Sociales" , sep = " \  ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = " / ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = "  \ ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = "\ ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
a <- paste0(a1,' : 2023')
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = "\ ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
a <- paste0(a1,' \2023')
print(a)
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = "/ ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = "\ ") #paste0 une sin espacios
print(economia)
a1<-"Facultad de Ciencias Sociales"
economia <- paste(a1, "2023" , sep = "/ ") #paste0 une sin espacios
print(economia)
print(%>%)
%>%
150 %>% sqrt() %>% log() %>% round(2) %>% abs()
x <- sqrt(150) ; x   # ; print()
y <- log(x) ; y
z <- round(y, 2) ; z
w <- abs(z) ; w
150 %>% sqrt() %>% log() %>% round(2) %>% abs()
sqrt(150) %>% log() %>% round(2) %>% abs()
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer()
pi<-(-3.1416)
print(pi)
pi<-(-3.1416)
pi %>% abs() %>% sqrt() %>% log() %>% round(2)
print(economia)
pi<-(-3.1416)
pi%>% abs() %>% sqrt() %>% log() %>% round(2)
abs(-3.1416) %>% sqrt() %>% log() %>% round(2)
install.packages("dplyr")
install.packages("readxl")
install.packages("pacman")
install.packages("pacman")
rm(list = ls())
cat("\014")
library(readxl)
library(dplyr)
library(rstudioapi) # set working directory to file location
library(pacman)  # Package Manager
p_load(dplyr, readxl, rstudioapi)
getwd()
## alternative 1
user <- Sys.getenv("USERNAME")
print(user)
setwd( paste0("C:/Users/",user,"/Documents/GitHub/1ECO35_2023_1/Lectures/Lecture_2") ) # set directorio
getwd()
setwd( paste0("C:/Users/",user,"\Allison\Documents\GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
print(user)
setwd( paste0("C:/Users/",user,"Allison\Documents\GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
print(user)
setwd( paste0("C:\Users\Allison\Documents\ ",user," \GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
print(user)
setwd( paste0("C:\Users\Allison\Documents\ ",user," \GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
getwd()
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
install.packages("pacman")
install.packages("pacman")
# short ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
i <- 0
while(i < 10) {
print(i + 1)
}
i <- 0
while(i < 10) {
i = i + 1
print(i)
}
#  saving
S <- 1000
# Periods
n <- 10
# interes rate
i <- 0.025
year = 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
ages<-  1:10000
for (age in ages) {
print(age+10 )
}
y <- c()
for(i in 1:length(ages)) {
y[i] <- log(ages[i])
}
start_time <- Sys.time()
for(i in 1:length(ages)) {
y[i] <- log(ages[i])
print(i)
}
print(Sys.time() - start_time)    # slow
start_time <- Sys.time()
y <- log(ages)
print(Sys.time() - start_time)    # fast
for (i in 1:50) {
if(i %in% 15:20) { # Ignora los primeros 20 elementos
next
}
cat("Ejecutanto",i,"\n")
}
or and Next, break ----
for (i in 1:50) {
if(i %in% 15:20) { # Ignora los primeros 20 elementos
break
}
cat("Ejecutanto",i,"\n")
}
w <- 10
while (TRUE){
coin <- round( runif(1) )  # redondear al entero mÃ¡s cercano
if (coin == 1) {
break
} else {
w = w + 10
print(coin)
}
}
calculator_square <- function(x,y){
x2 <- x * x
y2 <- y * y
result <- x2 * y2
return(list(x_2 = x2,
y_2 = y2,
text = paste0("La multiplicaciÃ³n del cuadrado es:", result)) )
}
calculator_square(3, 4)
calculator_square(3, 4)$x_2
calculator_square(3, 4)$text
calculator_square <- function(x,y){
x2 <- x * x
y2 <- y * y
result <- x2 * y2
return(list(x2,y2,paste0("La multiplicaciÃ³n del cuadrado es:", result)) )
}
# list para multiples resultados en una funciÃ³n de R
calculator_square(3, 4)[1]
calculator_square(3, 4)[[1]] # para obtener el elemento simple
list(1,2,3)
list(1,2,3)[[1]]
función_finanzas <- function(a,b,c){
result <- a*(1+b)^c
return(list(text=paste0("El monto final es:", result),text=paste0("Los intereses ganados son iguales a",result-a)))
}
función_finanzas(50000,0.8,12)
función_finanzas <- function(a,b,c){
result <- a*(1+b)^c
return(list(text=paste0("El monto final es:", result),text=paste0("Los intereses ganados son iguales a ",result-a)))
}
función_finanzas(50000,0.8,12)
función_finanzas <- function(a,b,c){
result <- a*(1+b)^c
return(list(text=paste0("El monto final es:", result),text=paste0("Los intereses ganados son iguales a ",result-a)))
}
función_finanzas(50000,0.3,12)
función_finanzas <- function(a,b,c){
result <- a*(1+b)^c
return(list(text=paste0("El monto final es:", result),text=paste0("Los intereses ganados son iguales a ",result-a)))
}
función_finanzas(50000,0.3,12)$monto1
portfolio <- read.csv("../../data/Portafolio.csv", encoding = "UTF-8")
user <- Sys.getenv("USERNAME")  # username
print(user)
setwd( paste0("C:/Users/",user,"/Documents/GitHub/1ECO35_2023_1/Lectures/Lecture_2") )
user <- Sys.getenv("USERNAME")  # username
print(user)
setwd( paste0("C:/Users/",user,"/Documents/GitHub/GITHUB/1ECO35_2023_1/Lectures/Lecture_2") )
portfolio <- read.csv("../../data/Portafolio.csv", encoding = "UTF-8")
alpha <- function(data){
X <- data$X
y <- data$Y
alpha_cal <- (var(y)-cov(X,y))/(var(y) + var(X) -2*cov(X,y))
return(alpha_cal)
}
alpha(portfolio)

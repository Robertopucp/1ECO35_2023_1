# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(dplyr)
library(stringr)
vector <- seq(100)
vector <- sample(100)
view vector
view
view ()
view (vector)
caso2(sample(1:50, size = 5))
vector <- runif(100)
vector <- sample(0:1)
vector <- sample(0:1, 100)
vector <- sample(0:1, 100, replace=False)
vector <- sample(0:1, 10, replace=False)
vector <- runif(100)
View(vector)
vector
base_compras <- read.csv("../../data/BDD_compras_consumidores.csv")
View(base_compras)
kable(head(base_compras),format = "markdown")
library(kableExtra)
install kableExtra
install.packages(kableExtra)
(head(base_compras),format = "markdown")
base_compras <- read_xls("../../data/BDD_compras_consumidores.xls")
base_compras <- read_xlsx("../../data/BDD_compras_consumidores.xlsx")
datos1_xls  <- read_excel("../../data/Riesgo_morosidad.xls")
################  laboratorio 4 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultánea
# Si la librería no está instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Load datasets ----------------------
datoscsv <- read.csv("../../data/Riesgo_morosidad.csv")
# punto y coma separa los datos
datoscsv <- read.csv("../../data/Riesgo_morosidad.csv", sep = ";")
# read.csv(file, header = TRUE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "", ...
str(datoscsv)
# Variables categoricas
datoscsv$sexo      <- factor(datoscsv$sexo, levels = c(1, 2),
labels = c("Masculino", "Femenino"))
levels(datoscsv$sexo)
levels(datoscsv$sexo) <- c("M","F")
datoscsv$fonopart  <- factor(datoscsv$fonopart, levels = c(1, 2),
labels = c("No", "Si"))
datoscsv$fonolab   <- factor(datoscsv$fonolab, levels = c(1, 2),
labels = c("No", "Si"))
datoscsv$autovaluo <- factor(datoscsv$autovaluo, levels = c(1, 2),
labels = c("No", "Si"))
datoscsv$esaval    <- factor(datoscsv$esaval, levels = c(1, 2),
labels = c("No", "Si"))
datoscsv$tieneaval <- factor(datoscsv$tieneaval, levels = c(1, 2),
labels = c("No", "Si"))
datoscsv$tiporenta <- factor(datoscsv$tiporenta, levels = c(2, 3),
labels = c("Fijo", "Variable"))
datoscsv$dpto      <- factor(datoscsv$dpto,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Lima", "Trujillo", "Arequipa",
"Cusco", "Ica", "Piura"))
datoscsv$morosidad <- factor(datoscsv$morosidad, levels = c(1, 2),
labels = c("No Moroso", "Moroso"))
str(datoscsv)
# Tabla cruzada
table(datoscsv$dpto, datoscsv$morosidad)
table(datoscsv$morosidad, datoscsv$tiporenta)
bd_europa <- bbdd %>% filter(continente == "Europa" & anio ==1987) %>% arrange(pip_per_capita)
datos1_xls  <- read_excel("../../data/Riesgo_morosidad.xls")
# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, datos)
base_compras <- read_xlsx("../../data/BDD_compras_consumidores.xlsx")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv")
View(base_compras)
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv", sep = ";")
View(base_compras)
vector <- runif(100) # Creamos el vector aletoario
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, datos)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Desarrollo de las preguntas ####
## Pregunta 1: Map, sapply, apply, función Lambda ####
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv", sep = ";")
siagie <- read.csv("../../data/siagie.csv")
notas_cursos <- data.frame(siagie)
View(notas_cursos)
View(siagie)
mean (notas_cursos)
# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, datos)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
siagie <- read.csv("../../data/siagie.csv")
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
#install.packages("stringr")
# Library ####
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, rstudioapi, stringr)
getwd()
# Set working directory (directorio de trabajo : ruta en la computadora)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
"Lapply and Sapply"
genero <- c('F', 'M', 'M', 'F', 'M')
lapply(genero, function(x) {if (x == 'M') 0 else 1 })
sapply(genero, function(x)  {if (x == 'M') 0 else 1})
NSE <- c('A', 'A', 'C', 'B', 'C')
sapply(NSE, function(x)  {if (x == 'A') 3 else if (x == 'B') 2 else 1})
vector <- seq(100)
lapply(vector, function(square) {square^2-mean(vector)}) # resultado en formato lista
vector^2-mean(vector)
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv", sep = ";")
vector <- runif(100) # Creamos el vector aletoario
View(vector)         # Vemos los números aleatoreos creados en un rango de (0 a 1)
lapply(vector, function(x){
out = x*(1/3) - 0.5*x
return(out)} )
sapply(vector, function(x){
out = x*(1/3) - 0.5*x
return(out)
# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, datos)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv", sep = ";")
vector <- runif(100) # Creamos el vector aletoario
# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, datos)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv", sep = ";")
# Integrantes ####
# Kevin Pareja (20196318)
# Elian Tongombol (20196453)
# Paola Aranda (20196052)
# Maria Alejandra Colan (20190515)
# Consideraciones previas: #####
## Borrando el environment ####
rm(list = ls())
## Borrando los graficos ####
graphics.off()
##Borrando la consola ####
cat("\014")
## Llamando a los directorios necesarios
library(pacman)
p_load(dplyr, readxl, tidyverse, foreign, datos)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Desarrollo de las preguntas ####
## Pregunta 1: Map, sapply, apply, función Lambda ####
base_compras <- datoscsv <- read.csv("../../data/BDD_compras_consumidores.csv", sep = ";")

# -------------------------------------------------------#
## Condicional ----
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
## Nested If statement -----
# v <- 2
# v <- NA
# v <- "String"
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
# Loops -----
# -------------------------------------------------------#
#  saving
S <- 1000
# Periods
n <- 10
# interes rate
i <- 0.025
year = 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
## While + If statement ----
w <- 10
while (w > 7  & w <= 15){
coin <- round( runif(1) )
coin
if (coin == 1) {
w <- w + 2
} else {
w <- w - 10
}
}
print(w)
## For ----
ages<-  c(21, 23, 25, 24, 20)
for (age in ages) {
print(age+10 )
}
## For and Next ----
for (i in 1:50) {
if(i %in% 15:20) { # Ignora los primeros 20 elementos
next
print(i  + 1000)
}
cat("Ejecutanto",i,"\n")
}
## For and Next, break ----
for (j in 1:100){
print(j)
if(j > 20){
break
}
}
## While + break ----
while (TRUE){
coin <- round( runif(1) )  # redondear al entero más cercano
if (coin == 1) {
break
} else {
print(point)
}
}
calculator <- function(x,y,z)
{
result = x*y*z
return(result)
}
calculator( 158, 38, 10 )
calculator( 158, 38)
calculator <- function(x,y,z)
{
result = x*y*z
return(result)
}
calculator( 158, 38, 10 )
calculator_square <- function(x,y){
x2 <- x * x
y2 <- y * y
result <- x2 * y2
return(list(x2,y2,paste0("La multiplicación del cuadrado es:", result)) )
}
calculator_square(3, 4)[1]
calculator_square(3, 4)[[1]] # para ontener el elemento simple
calculator_square_2 <- function(x,y){
x2 <- x * x
y2 <- y * y
result <- x2 * y2
if (200 >= result) {
return( cat( "Large number. Get only the result variable: ", result) )
} else {
return( print( "Too large number. Do not return variables!") )
}
}
w <- 10
while (w > 7  & w <= 15){
coin <- round( runif(1) )
print(coin)
if (coin == 1) {
w <- w + 2
} else {
w <- w - 10
}
}
#  laboratorio 1 ####
# Curso: Laboratorio de R y Python
# @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# Libraries ####
#install.packages("dplyr")
#install.packages("stringr")
library(dplyr) # library for cleaning datasets
library(stringr)
#-----------------------------------------------------------------#
#Laboratorio 1 Python
print("Hola Mundo")
## Tipo de variable ####
#Correr la lineas de codugo Ctrl + enter
# Codigo a texto Ctrl + Shift + c"
a1 <- 3.1416
print(a1)
typeof(a1)
class(a1)
is.numeric(a1)
# float to int
a2 <- as.integer(a1)
typeof(a2)
class(a2)
is.numeric(a2)
b1 <- 10000
typeof(b1)
b1 <- as.integer(10000)
# Round a number
print(round(4.51))
# power
print(4^2)
# operator pip %>% (Control + shift + M)
x <- sqrt(150) ; x   # ; print()
y <- log(x) ; y
z <- round(y, 2) ; z
w <- abs(z) ; w
150 %>% sqrt() %>% log() %>% round(2) %>% abs()
sqrt(150) %>% log() %>% round(2) %>% abs()
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% pow(2)
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% power(2)
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% ^2
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% *2
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% **2
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% ^2
2^2
pow(2)
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer()^2
sqrt(150) %>% log %>% round(2) %>% abs %>% as.integer() %>% **2
browseURL("https://allisonhorst.shinyapps.io/edge-of-the-tidyverse/#section-welcome")
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
#install.packages("stringr")
# Library ####
#library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, rstudioapi, tydiverse)
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
#install.packages("stringr")
# Library ####
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, rstudioapi, tydiverse)
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, rstudioapi, tidyverse)
browseURL("https://allisonhorst.shinyapps.io/edge-of-the-tidyverse/#section-welcome")
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
#install.packages("stringr")
# Library ####
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, rstudioapi, tidyverse)
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr)
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, tidyverse)
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr)
# Cambiar el directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
p_load(dplyr, readxl, tidyverse, datos)
paises
str(paises)
View(paises)
bbdd <- paises # dataset from "datos" library
bbdd
str(paises.d)
paises.d <- as.data.frame(bbdd) # formato data.frame
str(paises.d)
paises.d
View(paises.d)
attach(bbdd) # cada columna es una variable
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, tidyverse, datos)
# Si la librería no está instalada, entonces lo instala y llama para su uso
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr)
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
bbdd <- paises # dataset from "datos" library
# Base de datos en formato tibble
str(bbdd) # tipo de varaible
View(bbdd)
paises.d <- as.data.frame(bbdd) # formato data.frame
str(paises.d)
# 3.1 Filtrando para un año
filter(bbdd, anio == 1957)  # > >= < <=  & | == !=
bbdd_1957 <- filter(bbdd, anio == 1957)
bbdd %>% filter(anio == 1957)   # Es equivalente
bbdd %>% filter(pais == "China" & anio == 2002)
bbdd %>% filter(pais == "China", anio == 2002) # Es equivalente
bbdd %>% filter(pais == "Chile" | pais == "Perú") %>% View
bbdd %>% filter(pais == "Perú", anio == 1997 | anio == 2002 | anio == 2007)
bbdd %>% filter(pais == "Perú", anio %in% c(1997, 2002, 2007, 2022))  # Es equivalente
bbdd %>% filter(pais == "Perú", anio %in% c(1997, 2002, 2007))  # Es equivalente
bbdd %>% arrange(esperanza_de_vida)  # Por defecto ascendente
bbdd %>% arrange(desc(esperanza_de_vida))
bbdd %>% arrange(-esperanza_de_vida) # Equivalente al anterior
bbdd %>% filter(anio == 1957) %>%
arrange(desc(poblacion))
bbdd %>% filter(anio == 1957) %>%
arrange(desc(esperanza_de_vida))
bbdd %>% mutate(esperanza_de_vida = 12*esperanza_de_vida)
bbdd %>% mutate(esperanza_de_vida_meses = 12*esperanza_de_vida)
bbdd[ , c(1, 3, 5)]
bbdd[ , 1:3]
bbdd[ , c(1:3, 5)]
bbdd[ 1:3]
bbdd[c(1:3, 5)]
bbdd[c(1, 3, 5)]
bbdd[1:3]
bbdd[c(1:3, 5)]
bbdd[ , c("pais", "anio", "poblacion")]
bbdd[c("pais", "anio", "poblacion")]
bbdd %>% select(pais, anio, poblacion)
bbdd  %>% select(pais, poblacion, anio)
paises2 <- bbdd %>% rename(Pais = pais, Año = anio,
PBI = pib_per_capita) %>%
select(Año, Pais, PBI)
paises2
write.csv(paises2, "../../datos/Paises_renombrados.csv", row.names = F)
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = F)
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = T)
write.csv(paises2, "../../data/Paises_renombrados.csv")
bbdd[1:100, ]
bbdd[c(1,100,50,25), ]
bbdd[ c(100:200), c("pais", "anio", "poblacion")]
indices <- split(seq(nrows(bbdd)), sort( seq(nrows(bbdd)) %% 3 ) )
indices <- split(seq(nrow(bbdd)), sort( seq(nrow(bbdd)) %% 3 ) )
indices
names(indices) <- c('training', 'est', 'test') ## add labels
indices$est
indices$test
indices$training
bbdd[indices$training,]
bbdd[indices$test,]  # observaciones de trainning
attach(bbdd) # cada columna es una variable
mean(esperanza_de_vida)
bbdd %>% summarise(mean(esperanza_de_vida))   # summarize()
# Añadiendo una etiqueta
bbdd %>%
summarise(esperanza_de_vida_media = mean(esperanza_de_vida))
bbdd %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida))
# Añadiendo una etiqueta
bbdd %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida))
# Resumiendo la esperanza de vida en 1957
bbdd %>% filter(anio == 2007) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida))
# Resumiendo con varios indicadores para 1957 y 2007
bbdd %>% filter(anio == 1957) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% group_by(anio) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida))
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida)) %>%
View
# Resumiendo con varios indicadores para 1957 y 2007
bbdd %>% filter(anio%in% c(1957,2007)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
# Resumiendo por año
bbdd %>% group_by(anio) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida))
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida)) %>%
View
# Número de países por continente en 2007
bbdd %>% filter(anio == 2007) %>%
group_by(continente) %>% summarise(n())
bbdd %>% filter(anio == 2007) %>%
group_by(continente) %>% count()    # Es equivalente
bbdd %>% filter(anio == 2007) %>%
group_by(continente) %>% summarise(Número_Paises = n())
clean_data <- bbdd %>% group_by(pais) %>%
mutate(mean_pais = mean(pib_per_capita))
View(clean_data)
clean_data <- bbdd %>% group_by(pais) %>%
mutate(mean_pbipc_pais = mean(pib_per_capita))
View(clean_data)
clean_data <- bbdd %>% group_by(pais) %>%
mutate(mean_pbipc_pais = mean(pib_per_capita)) %>% ungroup() %>%
group_by(continente, anio) %>%  mutate(median_pob = median(poblacion))
View(clean_data)
clean_data <- bbdd %>% group_by(pais) %>%
mutate(mean_pbipc_pais = mean(pib_per_capita)) %>% ungroup() %>%
group_by(continente) %>%  mutate(median_pob = median(poblacion))
clean_data <- bbdd %>% group_by(pais) %>%
mutate(mean_pbipc_pais = mean(pib_per_capita)) %>% ungroup() %>%
group_by(continente) %>%  mutate(median_pob = median(poblacion)) %>%
as.data.frame()
View(clean_data)
clean_data <- bbdd |> group_by(pais) |>
mutate(mean_pbipc_pais = mean(pib_per_capita)) |> ungroup() |>
group_by(continente) |> mutate(median_pob = median(poblacion)) |>
as.data.frame()
bbdd$var <- 1000
View(bbdd)
bbdd$var <- NULL
bbdd$var1 <- 1000
bbdd$var2 <- "Indicadores"
bbdd[, ! names(bbdd) %in% c('var1', 'var2')]
bbdd[, ! names(bbdd) %in% c('var1', 'var2')] -> bbdd
bbdd$var <- 1000
bbdd$var <- NULL  # borrar variable de forma rapida
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = T,
encoding = "UTF-8")
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = T,
encoding = "UTF-8")
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = T)
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = T,
fileEncoding="UTF-8")
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = F,
fileEncoding="UTF-8")
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = F
,fileEncoding = "UTF-8")
write.csv(paises2, "../../data/Paises_renombrados.csv", row.names = F
, fileEncoding = "UTF-8")
sapply(bbdd, class)
summary(bbdd)
sum(is.na(pais))
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = first(esperanza_de_vida)) %>%
View
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = first(esperanza_de_vida)) %>%
View
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = quantile(esperanza_de_vida)) %>%
View
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
sd_esperanza_vida = sd(esperanza_de_vida)) %>%
View
bbdd %>% filter(between(p03a, 1950, 1990)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% filter(between(p03a, 1957, 1997)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% filter(between(anio, 1950, 1990)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% filter(pais, between(anio, 1950, 1990)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% filter(between(anio, 1950, 1990)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% filter(anio%in% c(1957,2007)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
bbdd %>% filter(anio%in% c(1957,2007)) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
max_pib_per_capita = max(pib_per_capita))
# Resumiendo por año
bbdd %>% group_by(anio) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida))
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida)) %>%
View
bbdd %>% group_by(anio, continente) %>%
summarise(mean_esperanza_de_vida = mean(esperanza_de_vida),
sd_esperanza_vida = sd(esperanza_de_vida)) %>%
View
bbdd  %>% select(pais, poblacion, anio) %>%
slice(100:n())  # desde la observación hasta la finaln
bbdd  %>% select(pais, poblacion, anio) %>%
slice(100:150)
bbdb %>% select(anio, continente, pais, everything()) %>% View
bbdb %>% select(anio, continente, pais, everything()) %>% View()
bbbb %>% select(anio, continente, pais, everything()) %>% View()
bbdd %>% select(anio, continente, pais, everything()) %>% View()
################  laboratorio 2 ############################
## Curso: Laboratorio de R y Python ###########################
## @author: Roberto Mendoza
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)  # permite llamar a varias librerias de manera simultánea
p_load(dplyr, readxl, tidyverse, datos)
# Si la librería no está instalada, entonces lo instala y llama para su uso
# tidyverse es una recopilación de varias librerias (dply, ggplot, stringr, etc)
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
bbdd <- paises # dataset from "datos" library
write.csv(bbdd, "../../data/paises.csv", row.names = F)
sapply(bbdd, is.na)
sapply(bbdd, is.na())
sapply(bbdd, is.na
sapply(bbdd, is.na)
sapply(bbdd, is.na)
apply(bbdd, is.na, 2)
apply(bbdd, 2, is.na)
apply(bbdd, 2, is.na())
apply(bbdd, 2, sum(is.na))
apply(bbdd, 2, sum(is.na))
apply(bbdd, 2, sum(is.na()))
apply(bbdd, is.na())
apply(bbdd, is.na
apply(bbdd, is.na)
apply(bbdd, 2,  is.na)
sum(apply(bbdd, 2,  is.na))
sapply(bbdd,is.na)
sum(is.na(pais))  # ningun missing en la variable país
sapply(bbdd, function(x) sum(is.na(x)))
filter(bbdd, anio != 1957)
table(bbdd$pais)
table(bbdd$pais, bbdd$continente)
table(bbdd$continente) # tabular
table(bbdd$continente, bbdd$anio) # tabular cruzado
table( bbdd$anio, bbdd$continente) # tabular cruzado

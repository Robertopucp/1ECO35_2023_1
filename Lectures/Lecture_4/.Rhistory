abs(-3.1416) %>% sqrt() %>% log() %>% round(2)
install.packages("dplyr")
install.packages("readxl")
install.packages("pacman")
install.packages("pacman")
rm(list = ls())
cat("\014")
library(readxl)
library(dplyr)
library(rstudioapi) # set working directory to file location
library(pacman)  # Package Manager
p_load(dplyr, readxl, rstudioapi)
getwd()
## alternative 1
user <- Sys.getenv("USERNAME")
print(user)
setwd( paste0("C:/Users/",user,"/Documents/GitHub/1ECO35_2023_1/Lectures/Lecture_2") ) # set directorio
getwd()
setwd( paste0("C:/Users/",user,"\Allison\Documents\GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
print(user)
setwd( paste0("C:/Users/",user,"Allison\Documents\GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
print(user)
setwd( paste0("C:\Users\Allison\Documents\ ",user," \GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
print(user)
setwd( paste0("C:\Users\Allison\Documents\ ",user," \GitHub\GITHUB\1ECO35_2023_1\Lectures\Lecture_2") ) # set directorio
getwd()
getwd()
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
rt ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
install.packages("pacman")
install.packages("pacman")
# short ifelse
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
y <- runif(10,-10,10) # runif( n: cantidad de elementos, inicio , final)
if (mean(y) > 0) {
dummy <- 1
} else {
dummy <- 0
}
print(dummy)
dummy <- ifelse(mean(y) > 0, 1, 0)
dummy <- if (mean(y) > 0) 1 else 0
print(dummy)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
y <- runif(10,-10,10)
v <- TRUE
if  ( is.numeric(v) ){
cat(v, " es un numero entero (no missing)")
} else if ( is.na(v) ) {
cat(v, " es un missing")
} else if ( is.character(v) ){
cat(v, " es un string")
} else if ( is.logical(v) ){
cat(v, " es un Boolean")
} else {
print("Sin resultado")
}
i <- 0
while(i < 10) {
print(i + 1)
}
i <- 0
while(i < 10) {
i = i + 1
print(i)
}
#  saving
S <- 1000
# Periods
n <- 10
# interes rate
i <- 0.025
year = 1
while (year < n){
S <-  S*(1+i)
year <-  year + 1
cat( "periodo ", year, ": ", S,"\n")
}
ages<-  1:10000
for (age in ages) {
print(age+10 )
}
y <- c()
for(i in 1:length(ages)) {
y[i] <- log(ages[i])
}
start_time <- Sys.time()
for(i in 1:length(ages)) {
y[i] <- log(ages[i])
print(i)
}
print(Sys.time() - start_time)    # slow
start_time <- Sys.time()
y <- log(ages)
print(Sys.time() - start_time)    # fast
for (i in 1:50) {
if(i %in% 15:20) { # Ignora los primeros 20 elementos
next
}
cat("Ejecutanto",i,"\n")
}
or and Next, break ----
for (i in 1:50) {
if(i %in% 15:20) { # Ignora los primeros 20 elementos
break
}
cat("Ejecutanto",i,"\n")
}
w <- 10
while (TRUE){
coin <- round( runif(1) )  # redondear al entero mÃ¡s cercano
if (coin == 1) {
break
} else {
w = w + 10
print(coin)
}
}
vector_esc <- escalamiento(vector) # aplicar función de escalamiento
st = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar la base de datos
datos <- read.csv("../../data/BDD_compras_consumidores.csv")
# Función de escalamiento
escalamiento <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
# Aplicar la función a las columnas numéricas de la base de datos
datos[, sapply(datos, is.numeric)] <- apply(datos[, sapply(datos, is.numeric)], 2, escalamiento)
# Aplicar la función al vector de 100 números aleatorios
vector <- runif(100) # generar vector de 100 números aleatorios
vector_esc <- escalamiento(vector) # aplicar función de escalamiento
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
## Cargar la base de datos
datos <- read.csv("../../data/BDD_compras_consumidores.csv")
# Función de escalamiento
escalamiento <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
# Aplicar la función a las columnas numéricas de la base de datos
datos[, sapply(datos, is.numeric)] <- apply(datos[, sapply(datos, is.numeric)], 2, escalamiento)
# Aplicar la función al vector de 100 números aleatorios
vector <- runif(100) # generar vector de 100 números aleatorios
vector_esc <- escalamiento(vector) # aplicar función de escalamiento
clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
## Cargar la base de datos
datos <- read.csv("../../data/BDD_compras_consumidores.csv")
# Función de escalamiento
escalamiento <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
# Aplicar la función a las columnas numéricas de la base de datos
datos[, sapply(datos, is.numeric)] <- apply(datos[, sapply(datos, is.numeric)], 2, escalamiento)
# Aplicar la función al vector de 100 números aleatorios
vector <- runif(100) # generar vector de 100 números aleatorios
vector_esc <- escalamiento(vector) # aplicar función de escalamiento
# clean environment variables
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar la base de datos
datos <- read.csv("../../data/BDD_compras_consumidores.csv")
# Función de escalamiento
escalamiento <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
# Aplicar la función a las columnas numéricas de la base de datos
datos[, sapply(datos, is.numeric)] <- apply(datos[, sapply(datos, is.numeric)], 2, escalamiento)
# Aplicar la función al vector de 100 números aleatorios
vector <- runif(100) # generar vector de 100 números aleatorios
vector_esc <- escalamiento(vector) # aplicar función de escalamiento
print(vector_esc)
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
#install.packages("pacman")
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar paquete "readxl" para leer el archivo Excel
library(readxl)
# Leer la base de datos desde el archivo Excel
datos1_xls  <- read_excel("../../siagie.xls")
# Calcular la nota promedio final de cada alumno
datos$promedio <- rowMeans(datos[,2:ncol(datos)])
# Calcular la nota máxima y mínima de cada alumno
datos$maxima <- apply(datos[,2:ncol(datos)], 1, max)
datos$minima <- apply(datos[,2:ncol(datos)], 1, min)
# Calcular el promedio y mediana de notas de cada curso
curso_promedio <- apply(datos[,2:ncol(datos)], 2, mean)
curso_mediana <- apply(datos[,2:ncol(datos)], 2, median)
# Imprimir los resultados
print(datos)
print(curso_promedio)
print(curso_mediana)
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
#install.packages("pacman")
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar paquete "readxl" para leer el archivo Excel
library(readxl)
# Leer la base de datos desde el archivo Excel
datos1_xls  <- read_excel("../../data/siagie.xls")
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
#install.packages("pacman")
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar paquete "readxl" para leer el archivo Excel
library(readxl)
# Leer la base de datos desde el archivo Excel
datos1_xlsx <- read_excel("../../data/siagie.xlsx")
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
#install.packages("pacman")
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar paquete "readxl" para leer el archivo Excel
library(readxl)
# Leer la base de datos desde el archivo Excel
siagie <- read.csv("../../data/siagie.csv")
# Calcular la nota promedio final de cada alumno
datos$promedio <- rowMeans(datos[,2:ncol(datos)])
# Calcular la nota máxima y mínima de cada alumno
datos$maxima <- apply(datos[,2:ncol(datos)], 1, max)
datos$minima <- apply(datos[,2:ncol(datos)], 1, min)
siagie <- read.csv("../../data/siagie.csv", row.names = F))
siagie <- read.csv("../../data/siagie.csv", row.names = F)
rm(list = ls())
# clean plots
graphics.off()
# clean console
cat("\014")
# additional options
options(scipen = 999)      # No scientific notation
# Library ####
#install.packages("pacman")
library(pacman)
# permite llamar a varias librerias de manera simultÃ¡nea
# Si la librerÃ­a no estÃ¡ instalada, entonces lo instala y llama para su uso
p_load(dplyr, readxl, tidyverse, foreign, datos)
# tidyverse es una recopilaciÃ³n de varias librerias (dply, ggplot, stringr, etc)
# foreign, libreria que permite leer base de datos de diferentes extensiones
# Change working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargar paquete "readxl" para leer el archivo Excel
library(readxl)
# Leer la base de datos desde el archivo Excel
siagie <- read.csv("../../data/siagie.csv", row.names = F)
